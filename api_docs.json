{
  "openapi": "3.1.0",
  "info": {
    "title": "Sellio 2",
    "description": "",
    "version": "2.9"
  },
  "servers": [
    {
      "url": "/",
      "description": ""
    }
  ],
  "paths": {
    "/api_requests": {
      "post": {
        "operationId": "api_api_requests_post",
        "tags": [
          "ApiRequest"
        ],
        "responses": {
          "201": {
            "description": "ApiRequest resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRequest"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRequest"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRequest"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRequest"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ApiRequest"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a ApiRequest resource.",
        "description": "Creates a ApiRequest resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ApiRequest resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IApiRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IApiRequest"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IApiRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IApiRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IApiRequest"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IApiRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IApiRequest"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/articles": {
      "get": {
        "operationId": "api_articles_get_collection",
        "tags": [
          "Article"
        ],
        "responses": {
          "200": {
            "description": "Article collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Article"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Article resources.",
        "description": "Retrieves the collection of Article resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "template",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "template[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[date]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_articles_post",
        "tags": [
          "Article"
        ],
        "responses": {
          "201": {
            "description": "Article resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Article resource.",
        "description": "Creates a Article resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Article resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IArticle"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IArticle"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IArticle"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IArticle"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IArticle"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/articles/url/{url}": {
      "get": {
        "operationId": "api_articlesurl_url_get",
        "tags": [
          "Article"
        ],
        "responses": {
          "200": {
            "description": "Article resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Article resource.",
        "description": "Retrieves a Article resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "Article identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/articles/{id}": {
      "get": {
        "operationId": "api_articles_id_get",
        "tags": [
          "Article"
        ],
        "responses": {
          "200": {
            "description": "Article resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Article resource.",
        "description": "Retrieves a Article resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_articles_id_delete",
        "tags": [
          "Article"
        ],
        "responses": {
          "204": {
            "description": "Article resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Article resource.",
        "description": "Removes the Article resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_articles_id_patch",
        "tags": [
          "Article"
        ],
        "responses": {
          "200": {
            "description": "Article resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Article resource.",
        "description": "Updates the Article resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Article resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IArticle"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/articles/{id}/clone": {
      "get": {
        "operationId": "api_articles_idclone_get",
        "tags": [
          "Article"
        ],
        "responses": {
          "200": {
            "description": "Article resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Article resource.",
        "description": "Retrieves a Article resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/articles/{id}/related_articles": {
      "get": {
        "operationId": "api_articles_idrelated_articles_get_collection",
        "tags": [
          "Article"
        ],
        "responses": {
          "200": {
            "description": "Article collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Article"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Article resources.",
        "description": "Retrieves the collection of Article resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "template",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "template[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[date]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/products/{id}/related_articles": {
      "get": {
        "operationId": "api_products_idrelated_articles_get_collection",
        "tags": [
          "Article"
        ],
        "responses": {
          "200": {
            "description": "Article collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Article"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Article resources.",
        "description": "Retrieves the collection of Article resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "template",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "template[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[date]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "date[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/banners": {
      "get": {
        "operationId": "api_banners_get_collection",
        "tags": [
          "Banner"
        ],
        "responses": {
          "200": {
            "description": "Banner collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Banner-GET_BANNER"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Banner-GET_BANNER"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Banner-GET_BANNER"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Banner-GET_BANNER"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Banner-GET_BANNER"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Banner-GET_BANNER"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Banner-GET_BANNER"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Banner resources.",
        "description": "Retrieves the collection of Banner resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "template",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "template[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_banners_post",
        "tags": [
          "Banner"
        ],
        "responses": {
          "201": {
            "description": "Banner resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Banner resource.",
        "description": "Creates a Banner resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Banner resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IBanner"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBanner"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IBanner"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IBanner"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IBanner"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IBanner"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IBanner"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/banners/url/{url}": {
      "get": {
        "operationId": "api_bannersurl_url_get",
        "tags": [
          "Banner"
        ],
        "responses": {
          "200": {
            "description": "Banner resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Banner resource.",
        "description": "Retrieves a Banner resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "Banner identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      }
    },
    "/banners/{id}": {
      "get": {
        "operationId": "api_banners_id_get",
        "tags": [
          "Banner"
        ],
        "responses": {
          "200": {
            "description": "Banner resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Banner resource.",
        "description": "Retrieves a Banner resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Banner identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_banners_id_delete",
        "tags": [
          "Banner"
        ],
        "responses": {
          "204": {
            "description": "Banner resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Banner resource.",
        "description": "Removes the Banner resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Banner identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_banners_id_patch",
        "tags": [
          "Banner"
        ],
        "responses": {
          "200": {
            "description": "Banner resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Banner"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Banner resource.",
        "description": "Updates the Banner resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Banner identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Banner resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IBanner"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/banner_slides": {
      "get": {
        "operationId": "api_banner_slides_get_collection",
        "tags": [
          "BannerSlide"
        ],
        "responses": {
          "200": {
            "description": "BannerSlide collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BannerSlide"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of BannerSlide resources.",
        "description": "Retrieves the collection of BannerSlide resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_banner_slides_post",
        "tags": [
          "BannerSlide"
        ],
        "responses": {
          "201": {
            "description": "BannerSlide resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a BannerSlide resource.",
        "description": "Creates a BannerSlide resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new BannerSlide resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IBannerSlide"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBannerSlide"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IBannerSlide"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IBannerSlide"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IBannerSlide"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IBannerSlide"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IBannerSlide"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/banner_slides/{id}": {
      "get": {
        "operationId": "api_banner_slides_id_get",
        "tags": [
          "BannerSlide"
        ],
        "responses": {
          "200": {
            "description": "BannerSlide resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a BannerSlide resource.",
        "description": "Retrieves a BannerSlide resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BannerSlide identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_banner_slides_id_delete",
        "tags": [
          "BannerSlide"
        ],
        "responses": {
          "204": {
            "description": "BannerSlide resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the BannerSlide resource.",
        "description": "Removes the BannerSlide resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BannerSlide identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_banner_slides_id_patch",
        "tags": [
          "BannerSlide"
        ],
        "responses": {
          "200": {
            "description": "BannerSlide resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/BannerSlide"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the BannerSlide resource.",
        "description": "Updates the BannerSlide resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BannerSlide identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated BannerSlide resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IBannerSlide"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/banners/{id}/slides": {
      "get": {
        "operationId": "api_banners_idslides_get_collection",
        "tags": [
          "BannerSlide"
        ],
        "responses": {
          "200": {
            "description": "BannerSlide collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BannerSlide"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BannerSlide"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of BannerSlide resources.",
        "description": "Retrieves the collection of BannerSlide resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "BannerSlide identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/barcode_scanner": {
      "post": {
        "operationId": "api_barcode_scanner_post",
        "tags": [
          "BarcodeScanner"
        ],
        "responses": {
          "200": {
            "description": "BarcodeScanner resource created",
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/BarcodeScanner"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a BarcodeScanner resource.",
        "description": "Creates a BarcodeScanner resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new BarcodeScanner resource",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/IBarcodeScanner"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/carriers": {
      "get": {
        "operationId": "api_carriers_get_collection",
        "tags": [
          "Carrier"
        ],
        "responses": {
          "200": {
            "description": "Carrier collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Carrier"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Carrier resources.",
        "description": "Retrieves the collection of Carrier resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "serviceType",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "serviceType[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[serviceType]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_carriers_post",
        "tags": [
          "Carrier"
        ],
        "responses": {
          "201": {
            "description": "Carrier resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Carrier resource.",
        "description": "Creates a Carrier resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Carrier resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICarrier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICarrier"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICarrier"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICarrier"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICarrier"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICarrier"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICarrier"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/carriers/{id}": {
      "get": {
        "operationId": "api_carriers_id_get",
        "tags": [
          "Carrier"
        ],
        "responses": {
          "200": {
            "description": "Carrier resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Carrier resource.",
        "description": "Retrieves a Carrier resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Carrier identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_carriers_id_delete",
        "tags": [
          "Carrier"
        ],
        "responses": {
          "204": {
            "description": "Carrier resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Carrier resource.",
        "description": "Removes the Carrier resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Carrier identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_carriers_id_patch",
        "tags": [
          "Carrier"
        ],
        "responses": {
          "200": {
            "description": "Carrier resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Carrier resource.",
        "description": "Updates the Carrier resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Carrier identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Carrier resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICarrier"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/articles/{id}/categories": {
      "get": {
        "operationId": "api_articles_idcategories_get_collection",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Category resources.",
        "description": "Retrieves the collection of Category resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[parent]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productCount]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMinPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMaxPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "visible",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/categories": {
      "get": {
        "operationId": "api_categories_get_collection",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Category resources.",
        "description": "Retrieves the collection of Category resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[parent]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productCount]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMinPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMaxPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "visible",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_categories_post",
        "tags": [
          "Category"
        ],
        "responses": {
          "201": {
            "description": "Category resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Category resource.",
        "description": "Creates a Category resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Category resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICategory"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICategory"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICategory"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICategory"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICategory"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICategory"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICategory"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/categories/tree": {
      "get": {
        "operationId": "api_categoriestree_get_collection",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Category resources.",
        "description": "Retrieves the collection of Category resources.",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[parent]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productCount]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMinPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMaxPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "visible",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/categories/url/{url}": {
      "get": {
        "operationId": "api_categoriesurl_url_get",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Category resource.",
        "description": "Retrieves a Category resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/categories/{id}": {
      "get": {
        "operationId": "api_categories_id_get",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Category resource.",
        "description": "Retrieves a Category resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_categories_id_delete",
        "tags": [
          "Category"
        ],
        "responses": {
          "204": {
            "description": "Category resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Category resource.",
        "description": "Removes the Category resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_categories_id_patch",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Category resource.",
        "description": "Updates the Category resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Category resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICategory"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_resources/{id}/categories": {
      "get": {
        "operationId": "api_custom_resources_idcategories_get_collection",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Category resources.",
        "description": "Retrieves the collection of Category resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[parent]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productCount]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMinPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMaxPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "visible",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/products/{id}/categories": {
      "get": {
        "operationId": "api_products_idcategories_get_collection",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Category resources.",
        "description": "Retrieves the collection of Category resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[parent]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productCount]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMinPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productMaxPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMinPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[productMaxPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "visible",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/coupons": {
      "get": {
        "operationId": "api_coupons_get_collection",
        "tags": [
          "Coupon"
        ],
        "responses": {
          "200": {
            "description": "Coupon collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Coupon"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Coupon resources.",
        "description": "Retrieves the collection of Coupon resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "code",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[fromDate]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[toDate]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_coupons_post",
        "tags": [
          "Coupon"
        ],
        "responses": {
          "201": {
            "description": "Coupon resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Coupon resource.",
        "description": "Creates a Coupon resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Coupon resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/coupons/check_code": {
      "post": {
        "operationId": "api_couponscheck_code_post",
        "tags": [
          "Coupon"
        ],
        "responses": {
          "200": {
            "description": "Coupon resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-CHECK_COUPON_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-CHECK_COUPON_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-CHECK_COUPON_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-CHECK_COUPON_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-CHECK_COUPON_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-CHECK_COUPON_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-CHECK_COUPON_OUTPUT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Coupon resource.",
        "description": "Creates a Coupon resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Coupon resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-CHECK_COUPON_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-CHECK_COUPON_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-CHECK_COUPON_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-CHECK_COUPON_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-CHECK_COUPON_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-CHECK_COUPON_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-CHECK_COUPON_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/coupons/first_order": {
      "post": {
        "operationId": "api_couponsfirst_order_post",
        "tags": [
          "Coupon"
        ],
        "responses": {
          "200": {
            "description": "Coupon resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-FIRST_COUPON_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-FIRST_COUPON_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-FIRST_COUPON_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-FIRST_COUPON_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-FIRST_COUPON_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-FIRST_COUPON_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon-FIRST_COUPON_OUTPUT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Coupon resource.",
        "description": "Creates a Coupon resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Coupon resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-FIRST_COUPON_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-FIRST_COUPON_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-FIRST_COUPON_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-FIRST_COUPON_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-FIRST_COUPON_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-FIRST_COUPON_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon-FIRST_COUPON_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/coupons/{id}": {
      "get": {
        "operationId": "api_coupons_id_get",
        "tags": [
          "Coupon"
        ],
        "responses": {
          "200": {
            "description": "Coupon resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Coupon resource.",
        "description": "Retrieves a Coupon resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_coupons_id_delete",
        "tags": [
          "Coupon"
        ],
        "responses": {
          "204": {
            "description": "Coupon resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Coupon resource.",
        "description": "Removes the Coupon resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_coupons_id_patch",
        "tags": [
          "Coupon"
        ],
        "responses": {
          "200": {
            "description": "Coupon resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Coupon resource.",
        "description": "Updates the Coupon resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Coupon identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Coupon resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICoupon"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_fields": {
      "get": {
        "operationId": "api_custom_fields_get_collection",
        "tags": [
          "CustomField"
        ],
        "responses": {
          "200": {
            "description": "CustomField collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomField"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of CustomField resources.",
        "description": "Retrieves the collection of CustomField resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "ownerResource",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ownerResource[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ownerId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_custom_fields_post",
        "tags": [
          "CustomField"
        ],
        "responses": {
          "201": {
            "description": "CustomField resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a CustomField resource.",
        "description": "Creates a CustomField resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new CustomField resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomField"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomField"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICustomField"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICustomField"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICustomField"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICustomField"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICustomField"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_fields/{id}": {
      "get": {
        "operationId": "api_custom_fields_id_get",
        "tags": [
          "CustomField"
        ],
        "responses": {
          "200": {
            "description": "CustomField resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a CustomField resource.",
        "description": "Retrieves a CustomField resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomField identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_custom_fields_id_delete",
        "tags": [
          "CustomField"
        ],
        "responses": {
          "204": {
            "description": "CustomField resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the CustomField resource.",
        "description": "Removes the CustomField resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomField identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_custom_fields_id_patch",
        "tags": [
          "CustomField"
        ],
        "responses": {
          "200": {
            "description": "CustomField resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the CustomField resource.",
        "description": "Updates the CustomField resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomField identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated CustomField resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomField"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_parameters": {
      "get": {
        "operationId": "api_custom_parameters_get_collection",
        "tags": [
          "CustomParameter"
        ],
        "responses": {
          "200": {
            "description": "CustomParameter collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomParameter"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomParameter"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomParameter"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomParameter"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomParameter"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomParameter"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomParameter"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of CustomParameter resources.",
        "description": "Retrieves the collection of CustomParameter resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_custom_parameters_post",
        "tags": [
          "CustomParameter"
        ],
        "responses": {
          "201": {
            "description": "CustomParameter resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a CustomParameter resource.",
        "description": "Creates a CustomParameter resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new CustomParameter resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameter"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameter"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameter"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameter"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameter"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_parameters/url/{url}": {
      "get": {
        "operationId": "api_custom_parametersurl_url_get",
        "tags": [
          "CustomParameter"
        ],
        "responses": {
          "200": {
            "description": "CustomParameter resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a CustomParameter resource.",
        "description": "Retrieves a CustomParameter resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "CustomParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/custom_parameters/{id}": {
      "get": {
        "operationId": "api_custom_parameters_id_get",
        "tags": [
          "CustomParameter"
        ],
        "responses": {
          "200": {
            "description": "CustomParameter resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a CustomParameter resource.",
        "description": "Retrieves a CustomParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_custom_parameters_id_delete",
        "tags": [
          "CustomParameter"
        ],
        "responses": {
          "204": {
            "description": "CustomParameter resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the CustomParameter resource.",
        "description": "Removes the CustomParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_custom_parameters_id_patch",
        "tags": [
          "CustomParameter"
        ],
        "responses": {
          "200": {
            "description": "CustomParameter resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameter"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the CustomParameter resource.",
        "description": "Updates the CustomParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated CustomParameter resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameter"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_parameter_items": {
      "post": {
        "operationId": "api_custom_parameter_items_post",
        "tags": [
          "CustomParameterItem"
        ],
        "responses": {
          "201": {
            "description": "CustomParameterItem resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a CustomParameterItem resource.",
        "description": "Creates a CustomParameterItem resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new CustomParameterItem resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameterItem"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameterItem"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameterItem"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameterItem"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameterItem"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameterItem"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameterItem"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_parameter_items/{id}": {
      "delete": {
        "operationId": "api_custom_parameter_items_id_delete",
        "tags": [
          "CustomParameterItem"
        ],
        "responses": {
          "204": {
            "description": "CustomParameterItem resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the CustomParameterItem resource.",
        "description": "Removes the CustomParameterItem resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomParameterItem identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_custom_parameter_items_id_patch",
        "tags": [
          "CustomParameterItem"
        ],
        "responses": {
          "200": {
            "description": "CustomParameterItem resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomParameterItem"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the CustomParameterItem resource.",
        "description": "Updates the CustomParameterItem resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomParameterItem identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated CustomParameterItem resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomParameterItem"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_resources": {
      "get": {
        "operationId": "api_custom_resources_get_collection",
        "tags": [
          "CustomResource"
        ],
        "responses": {
          "200": {
            "description": "CustomResource collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomResource"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomResource"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomResource"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomResource"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomResource"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomResource"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomResource"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of CustomResource resources.",
        "description": "Retrieves the collection of CustomResource resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_custom_resources_post",
        "tags": [
          "CustomResource"
        ],
        "responses": {
          "201": {
            "description": "CustomResource resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a CustomResource resource.",
        "description": "Creates a CustomResource resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new CustomResource resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomResource"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomResource"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ICustomResource"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICustomResource"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ICustomResource"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ICustomResource"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ICustomResource"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_resources/url/{url}": {
      "get": {
        "operationId": "api_custom_resourcesurl_url_get",
        "tags": [
          "CustomResource"
        ],
        "responses": {
          "200": {
            "description": "CustomResource resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a CustomResource resource.",
        "description": "Retrieves a CustomResource resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "CustomResource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/custom_resources/{id}": {
      "get": {
        "operationId": "api_custom_resources_id_get",
        "tags": [
          "CustomResource"
        ],
        "responses": {
          "200": {
            "description": "CustomResource resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a CustomResource resource.",
        "description": "Retrieves a CustomResource resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomResource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_custom_resources_id_delete",
        "tags": [
          "CustomResource"
        ],
        "responses": {
          "204": {
            "description": "CustomResource resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the CustomResource resource.",
        "description": "Removes the CustomResource resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomResource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_custom_resources_id_patch",
        "tags": [
          "CustomResource"
        ],
        "responses": {
          "200": {
            "description": "CustomResource resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the CustomResource resource.",
        "description": "Updates the CustomResource resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomResource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated CustomResource resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ICustomResource"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/custom_resources/{id}/clone": {
      "get": {
        "operationId": "api_custom_resources_idclone_get",
        "tags": [
          "CustomResource"
        ],
        "responses": {
          "200": {
            "description": "CustomResource resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResource"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a CustomResource resource.",
        "description": "Retrieves a CustomResource resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CustomResource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/discounts": {
      "get": {
        "operationId": "api_discounts_get_collection",
        "tags": [
          "Discount"
        ],
        "responses": {
          "200": {
            "description": "Discount collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Discount"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Discount resources.",
        "description": "Retrieves the collection of Discount resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "discountedValueType",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "discountedValueType[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[discountedValueType]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_discounts_post",
        "tags": [
          "Discount"
        ],
        "responses": {
          "201": {
            "description": "Discount resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Discount resource.",
        "description": "Creates a Discount resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Discount resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IDiscount"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IDiscount"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IDiscount"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IDiscount"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IDiscount"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IDiscount"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IDiscount"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/discounts/{id}": {
      "get": {
        "operationId": "api_discounts_id_get",
        "tags": [
          "Discount"
        ],
        "responses": {
          "200": {
            "description": "Discount resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Discount resource.",
        "description": "Retrieves a Discount resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_discounts_id_delete",
        "tags": [
          "Discount"
        ],
        "responses": {
          "204": {
            "description": "Discount resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Discount resource.",
        "description": "Removes the Discount resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_discounts_id_patch",
        "tags": [
          "Discount"
        ],
        "responses": {
          "200": {
            "description": "Discount resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Discount resource.",
        "description": "Updates the Discount resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discount identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Discount resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IDiscount"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/dpd": {
      "post": {
        "operationId": "api_dpd_post",
        "tags": [
          "Dpd"
        ],
        "responses": {
          "201": {
            "description": "Dpd resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Dpd"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dpd"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Dpd"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Dpd"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Dpd"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Dpd"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Dpd"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Dpd resource.",
        "description": "Creates a Dpd resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Dpd resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IDpd"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IDpd"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IDpd"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IDpd"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IDpd"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IDpd"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IDpd"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/emails": {
      "get": {
        "operationId": "api_emails_get_collection",
        "tags": [
          "Email"
        ],
        "responses": {
          "200": {
            "description": "Email collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Email"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Email resources.",
        "description": "Retrieves the collection of Email resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "templateName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "templateName[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "shop",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shop[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[templateName]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "recipientEmails",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_emails_post",
        "tags": [
          "Email"
        ],
        "responses": {
          "201": {
            "description": "Email resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Email resource.",
        "description": "Creates a Email resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Email resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IEmail"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IEmail"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IEmail"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEmail"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEmail"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IEmail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IEmail"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/emails/resend": {
      "post": {
        "operationId": "api_emailsresend_post",
        "tags": [
          "Email"
        ],
        "responses": {
          "200": {
            "description": "Email resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Email resource.",
        "description": "Creates a Email resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Email resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IEmail-RESEND_EMAIL_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IEmail-RESEND_EMAIL_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IEmail-RESEND_EMAIL_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEmail-RESEND_EMAIL_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEmail-RESEND_EMAIL_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IEmail-RESEND_EMAIL_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IEmail-RESEND_EMAIL_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/emails/{id}": {
      "get": {
        "operationId": "api_emails_id_get",
        "tags": [
          "Email"
        ],
        "responses": {
          "200": {
            "description": "Email resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Email resource.",
        "description": "Retrieves a Email resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Email identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      }
    },
    "/enquiries/{id}/emails": {
      "get": {
        "operationId": "api_enquiries_idemails_get_collection",
        "tags": [
          "Email"
        ],
        "responses": {
          "200": {
            "description": "Email collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Email"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Email resources.",
        "description": "Retrieves the collection of Email resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Email identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "templateName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "templateName[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "shop",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shop[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[templateName]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "recipientEmails",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/orders/{id}/emails": {
      "get": {
        "operationId": "api_orders_idemails_get_collection",
        "tags": [
          "Email"
        ],
        "responses": {
          "200": {
            "description": "Email collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Email"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Email resources.",
        "description": "Retrieves the collection of Email resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Email identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "templateName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "templateName[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "shop",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shop[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[templateName]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "recipientEmails",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/email_templates": {
      "get": {
        "operationId": "api_email_templates_get_collection",
        "tags": [
          "EmailTemplate"
        ],
        "responses": {
          "200": {
            "description": "EmailTemplate collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmailTemplate"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplate"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplate"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplate"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplate"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplate"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplate"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of EmailTemplate resources.",
        "description": "Retrieves the collection of EmailTemplate resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[owner]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[addAttachments]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/email_templates/{id}": {
      "get": {
        "operationId": "api_email_templates_id_get",
        "tags": [
          "EmailTemplate"
        ],
        "responses": {
          "200": {
            "description": "EmailTemplate resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a EmailTemplate resource.",
        "description": "Retrieves a EmailTemplate resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "EmailTemplate identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_email_templates_id_patch",
        "tags": [
          "EmailTemplate"
        ],
        "responses": {
          "200": {
            "description": "EmailTemplate resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplate"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the EmailTemplate resource.",
        "description": "Updates the EmailTemplate resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "EmailTemplate identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated EmailTemplate resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IEmailTemplate"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/enquiries": {
      "get": {
        "operationId": "api_enquiries_get_collection",
        "tags": [
          "Enquiry"
        ],
        "responses": {
          "200": {
            "description": "Enquiry collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Enquiry"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enquiry"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enquiry"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enquiry"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enquiry"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enquiry"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enquiry"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Enquiry resources.",
        "description": "Retrieves the collection of Enquiry resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "shop",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shop[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cancelReason",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelReason[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "currency[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[cancelReason]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[cancelledAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[closedAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[currency]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelledAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelledAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelledAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelledAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "closedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "closedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "closedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "closedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_enquiries_post",
        "tags": [
          "Enquiry"
        ],
        "responses": {
          "201": {
            "description": "Enquiry resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Enquiry resource.",
        "description": "Creates a Enquiry resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Enquiry resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IEnquiry"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IEnquiry"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IEnquiry"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEnquiry"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEnquiry"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IEnquiry"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IEnquiry"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/enquiries/{id}": {
      "get": {
        "operationId": "api_enquiries_id_get",
        "tags": [
          "Enquiry"
        ],
        "responses": {
          "200": {
            "description": "Enquiry resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Enquiry resource.",
        "description": "Retrieves a Enquiry resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enquiry identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_enquiries_id_delete",
        "tags": [
          "Enquiry"
        ],
        "responses": {
          "204": {
            "description": "Enquiry resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Enquiry resource.",
        "description": "Removes the Enquiry resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enquiry identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_enquiries_id_patch",
        "tags": [
          "Enquiry"
        ],
        "responses": {
          "200": {
            "description": "Enquiry resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Enquiry"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Enquiry resource.",
        "description": "Updates the Enquiry resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enquiry identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Enquiry resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IEnquiry-UPDATE_ENQUIRY"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/enquiries/{id}/statuses": {
      "get": {
        "operationId": "api_enquiries_idstatuses_get_collection",
        "tags": [
          "EnquiryStatusChange"
        ],
        "responses": {
          "200": {
            "description": "EnquiryStatusChange collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EnquiryStatusChange"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnquiryStatusChange"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnquiryStatusChange"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnquiryStatusChange"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnquiryStatusChange"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnquiryStatusChange"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnquiryStatusChange"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of EnquiryStatusChange resources.",
        "description": "Retrieves the collection of EnquiryStatusChange resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "EnquiryStatusChange identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/enums": {
      "get": {
        "operationId": "api_enums_get_collection",
        "tags": [
          "Enum"
        ],
        "responses": {
          "200": {
            "description": "Enum collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Enum"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enum"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enum"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enum"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enum"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enum"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Enum"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Enum resources.",
        "description": "Retrieves the collection of Enum resources.",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/enums/{name}": {
      "get": {
        "operationId": "api_enums_name_get",
        "tags": [
          "Enum"
        ],
        "responses": {
          "200": {
            "description": "Enum resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Enum"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enum"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Enum"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Enum"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Enum"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Enum"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Enum"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Enum resource.",
        "description": "Retrieves a Enum resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Enum identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      }
    },
    "/environment_variables": {
      "get": {
        "operationId": "api_environment_variables_get_collection",
        "tags": [
          "EnvironmentVariable"
        ],
        "responses": {
          "200": {
            "description": "EnvironmentVariable collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EnvironmentVariable"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentVariable"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentVariable"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentVariable"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentVariable"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentVariable"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentVariable"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of EnvironmentVariable resources.",
        "description": "Retrieves the collection of EnvironmentVariable resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "shop",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shop[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_environment_variables_post",
        "tags": [
          "EnvironmentVariable"
        ],
        "responses": {
          "201": {
            "description": "EnvironmentVariable resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a EnvironmentVariable resource.",
        "description": "Creates a EnvironmentVariable resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new EnvironmentVariable resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IEnvironmentVariable"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IEnvironmentVariable"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IEnvironmentVariable"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEnvironmentVariable"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEnvironmentVariable"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IEnvironmentVariable"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IEnvironmentVariable"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/environment_variables/{name}": {
      "get": {
        "operationId": "api_environment_variables_name_get",
        "tags": [
          "EnvironmentVariable"
        ],
        "responses": {
          "200": {
            "description": "EnvironmentVariable resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a EnvironmentVariable resource.",
        "description": "Retrieves a EnvironmentVariable resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "EnvironmentVariable identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_environment_variables_name_delete",
        "tags": [
          "EnvironmentVariable"
        ],
        "responses": {
          "204": {
            "description": "EnvironmentVariable resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the EnvironmentVariable resource.",
        "description": "Removes the EnvironmentVariable resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "EnvironmentVariable identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_environment_variables_name_patch",
        "tags": [
          "EnvironmentVariable"
        ],
        "responses": {
          "200": {
            "description": "EnvironmentVariable resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentVariable"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the EnvironmentVariable resource.",
        "description": "Updates the EnvironmentVariable resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "EnvironmentVariable identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated EnvironmentVariable resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IEnvironmentVariable"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/establishments": {
      "get": {
        "operationId": "api_establishments_get_collection",
        "tags": [
          "Establishment"
        ],
        "responses": {
          "200": {
            "description": "Establishment collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Establishment"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Establishment"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Establishment"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Establishment"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Establishment"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Establishment"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Establishment"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Establishment resources.",
        "description": "Retrieves the collection of Establishment resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "manager",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "manager[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "users",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "users[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "companyName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ico",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ico[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "loyaltyPoints",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "loyaltyPoints[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "telephone",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[parent]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[loyaltyPoints]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_establishments_post",
        "tags": [
          "Establishment"
        ],
        "responses": {
          "201": {
            "description": "Establishment resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Establishment resource.",
        "description": "Creates a Establishment resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Establishment resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IEstablishment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IEstablishment"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IEstablishment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEstablishment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IEstablishment"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IEstablishment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IEstablishment"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/establishments/{id}": {
      "get": {
        "operationId": "api_establishments_id_get",
        "tags": [
          "Establishment"
        ],
        "responses": {
          "200": {
            "description": "Establishment resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Establishment resource.",
        "description": "Retrieves a Establishment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Establishment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_establishments_id_delete",
        "tags": [
          "Establishment"
        ],
        "responses": {
          "204": {
            "description": "Establishment resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Establishment resource.",
        "description": "Removes the Establishment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Establishment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_establishments_id_patch",
        "tags": [
          "Establishment"
        ],
        "responses": {
          "200": {
            "description": "Establishment resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Establishment"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Establishment resource.",
        "description": "Updates the Establishment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Establishment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Establishment resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IEstablishment"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/exports": {
      "post": {
        "operationId": "api_exports_post",
        "tags": [
          "Export"
        ],
        "responses": {
          "201": {
            "description": "Export resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Export resource.",
        "description": "Creates a Export resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Export resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IExport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IExport"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IExport"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IExport"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IExport"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IExport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IExport"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/categories/{id}/files": {
      "get": {
        "operationId": "api_categories_idfiles_get_collection",
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "File collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/File"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of File resources.",
        "description": "Retrieves the collection of File resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/email_templates/{id}/files": {
      "get": {
        "operationId": "api_email_templates_idfiles_get_collection",
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "File collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/File"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of File resources.",
        "description": "Retrieves the collection of File resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/files": {
      "post": {
        "operationId": "api_files_post",
        "tags": [
          "File"
        ],
        "responses": {
          "201": {
            "description": "File resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a File resource.",
        "description": "Creates a File resource.",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "label": {
                    "type": "string",
                    "description": "File label"
                  },
                  "tags": {
                    "type": "array",
                    "description": "File tags"
                  }
                }
              }
            }
          },
          "required": false
        },
        "deprecated": false
      }
    },
    "/files/mutation": {
      "get": {
        "operationId": "api_filesmutation_get_collection",
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "File collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/File"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of File resources.",
        "description": "Retrieves the collection of File resources.",
        "parameters": [
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "id[]",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "explode": true
          },
          {
            "name": "iri",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Iri of resorce"
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/files/{id}": {
      "get": {
        "operationId": "api_files_id_get",
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "File resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a File resource.",
        "description": "Retrieves a File resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_files_id_delete",
        "tags": [
          "File"
        ],
        "responses": {
          "204": {
            "description": "File resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the File resource.",
        "description": "Removes the File resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_files_id_patch",
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "File resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the File resource.",
        "description": "Updates the File resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated File resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IFile-FILE_PATCH_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/files/{id}/mutation": {
      "get": {
        "operationId": "api_files_idmutation_get",
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "File resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a File resource.",
        "description": "Retrieves a File resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/product_variants/{id}/files": {
      "get": {
        "operationId": "api_product_variants_idfiles_get_collection",
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "File collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/File"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of File resources.",
        "description": "Retrieves the collection of File resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/products/{id}/files": {
      "get": {
        "operationId": "api_products_idfiles_get_collection",
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "File collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/File"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of File resources.",
        "description": "Retrieves the collection of File resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "File identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/google_product_categories": {
      "get": {
        "operationId": "api_google_product_categories_get",
        "tags": [
          "Google"
        ],
        "responses": {
          "200": {
            "description": "Google resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Google"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Google"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Google"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Google"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Google"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Google"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Google"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Google resource.",
        "description": "Retrieves a Google resource.",
        "parameters": [
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/heureka_product_categories": {
      "get": {
        "operationId": "api_heureka_product_categories_get",
        "tags": [
          "Heureka"
        ],
        "responses": {
          "200": {
            "description": "Heureka resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Heureka"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Heureka"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Heureka"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Heureka"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Heureka"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Heureka"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Heureka"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Heureka resource.",
        "description": "Retrieves a Heureka resource.",
        "parameters": [
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/imports": {
      "post": {
        "operationId": "api_imports_post",
        "tags": [
          "Import"
        ],
        "responses": {
          "201": {
            "description": "Import resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Import"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Import resource.",
        "description": "Creates a Import resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Import resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IImport"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IImport"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IImport"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IImport"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IImport"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IImport"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IImport"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/instagram_feeds/me": {
      "get": {
        "operationId": "api_instagram_feedsme_get",
        "tags": [
          "InstagramFeed"
        ],
        "responses": {
          "200": {
            "description": "InstagramFeed resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramFeed"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramFeed"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramFeed"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramFeed"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramFeed"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramFeed"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/InstagramFeed"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a InstagramFeed resource.",
        "description": "Retrieves a InstagramFeed resource.",
        "parameters": [
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      }
    },
    "/json_blocks": {
      "get": {
        "operationId": "api_json_blocks_get_collection",
        "tags": [
          "JsonBlock"
        ],
        "responses": {
          "200": {
            "description": "JsonBlock collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JsonBlock"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonBlock"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonBlock"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonBlock"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonBlock"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonBlock"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonBlock"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of JsonBlock resources.",
        "description": "Retrieves the collection of JsonBlock resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_json_blocks_post",
        "tags": [
          "JsonBlock"
        ],
        "responses": {
          "201": {
            "description": "JsonBlock resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a JsonBlock resource.",
        "description": "Creates a JsonBlock resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new JsonBlock resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IJsonBlock"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IJsonBlock"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IJsonBlock"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IJsonBlock"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IJsonBlock"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IJsonBlock"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IJsonBlock"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/json_blocks/{name}": {
      "get": {
        "operationId": "api_json_blocks_name_get",
        "tags": [
          "JsonBlock"
        ],
        "responses": {
          "200": {
            "description": "JsonBlock resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a JsonBlock resource.",
        "description": "Retrieves a JsonBlock resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "JsonBlock identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_json_blocks_name_delete",
        "tags": [
          "JsonBlock"
        ],
        "responses": {
          "204": {
            "description": "JsonBlock resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the JsonBlock resource.",
        "description": "Removes the JsonBlock resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "JsonBlock identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_json_blocks_name_patch",
        "tags": [
          "JsonBlock"
        ],
        "responses": {
          "200": {
            "description": "JsonBlock resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBlock"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the JsonBlock resource.",
        "description": "Updates the JsonBlock resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "JsonBlock identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated JsonBlock resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IJsonBlock"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/login/facebook": {
      "post": {
        "operationId": "api_loginfacebook_post",
        "tags": [
          "Login"
        ],
        "responses": {
          "201": {
            "description": "Login resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Login resource.",
        "description": "Creates a Login resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Login resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/login/google": {
      "post": {
        "operationId": "api_logingoogle_post",
        "tags": [
          "Login"
        ],
        "responses": {
          "201": {
            "description": "Login resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Login-LOGIN_OUTPUT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Login resource.",
        "description": "Creates a Login resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Login resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ILogin-LOGIN_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/login": {
      "post": {
        "operationId": "login_check_post",
        "tags": [
          "Login Check"
        ],
        "responses": {
          "200": {
            "description": "User token created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "readOnly": true,
                      "type": "string",
                      "nullable": false
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            }
          }
        },
        "summary": "Creates a user token.",
        "description": "Creates a user token.",
        "requestBody": {
          "description": "The login data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "nullable": false
                  },
                  "password": {
                    "type": "string",
                    "nullable": false
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/logstash": {
      "post": {
        "operationId": "api_logstash_post",
        "tags": [
          "Logstash"
        ],
        "responses": {
          "204": {
            "description": "Logstash resource created",
            "content": {
              "application/ld+json": {
                "schema": {}
              },
              "application/json": {
                "schema": {}
              },
              "text/html": {
                "schema": {}
              },
              "application/xml": {
                "schema": {}
              },
              "text/xml": {
                "schema": {}
              },
              "text/csv": {
                "schema": {}
              },
              "multipart/form-data": {
                "schema": {}
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Logstash resource.",
        "description": "Creates a Logstash resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Logstash resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ILogstash"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ILogstash"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ILogstash"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ILogstash"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ILogstash"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ILogstash"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ILogstash"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/mercure/login": {
      "get": {
        "operationId": "api_mercurelogin_get",
        "tags": [
          "Mercure"
        ],
        "responses": {
          "200": {
            "description": "Mercure resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Mercure"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mercure"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Mercure"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Mercure"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Mercure"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Mercure"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Mercure"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Mercure resource.",
        "description": "Retrieves a Mercure resource.",
        "parameters": [
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      }
    },
    "/navigations": {
      "get": {
        "operationId": "api_navigations_get_collection",
        "tags": [
          "Navigation"
        ],
        "responses": {
          "200": {
            "description": "Navigation collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Navigation"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Navigation"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Navigation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Navigation"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Navigation"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Navigation"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Navigation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Navigation resources.",
        "description": "Retrieves the collection of Navigation resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_navigations_post",
        "tags": [
          "Navigation"
        ],
        "responses": {
          "201": {
            "description": "Navigation resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Navigation resource.",
        "description": "Creates a Navigation resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Navigation resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/INavigation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/INavigation"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/INavigation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/INavigation"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/INavigation"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/INavigation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/INavigation"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/navigations/url/{url}": {
      "get": {
        "operationId": "api_navigationsurl_url_get",
        "tags": [
          "Navigation"
        ],
        "responses": {
          "200": {
            "description": "Navigation resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Navigation resource.",
        "description": "Retrieves a Navigation resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "Navigation identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      }
    },
    "/navigations/{id}": {
      "get": {
        "operationId": "api_navigations_id_get",
        "tags": [
          "Navigation"
        ],
        "responses": {
          "200": {
            "description": "Navigation resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Navigation resource.",
        "description": "Retrieves a Navigation resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Navigation identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_navigations_id_delete",
        "tags": [
          "Navigation"
        ],
        "responses": {
          "204": {
            "description": "Navigation resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Navigation resource.",
        "description": "Removes the Navigation resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Navigation identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_navigations_id_patch",
        "tags": [
          "Navigation"
        ],
        "responses": {
          "200": {
            "description": "Navigation resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Navigation"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Navigation resource.",
        "description": "Updates the Navigation resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Navigation identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Navigation resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/INavigation"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/orders": {
      "get": {
        "operationId": "api_orders_get_collection",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Order resources.",
        "description": "Retrieves the collection of Order resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "number",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "number[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "shop",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shop[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "client.companyName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "client.familyName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cancelReason",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelReason[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "financialStatus",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "financialStatus[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "paymentType",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "paymentType[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "currency[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[number]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[cancelReason]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[cancelledAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[financialStatus]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[paymentType]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[closedAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[currency]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[newAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelledAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelledAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelledAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cancelledAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "closedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "closedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "closedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "closedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "newAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "newAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "newAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "newAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "consents",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "salesReferent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "establishment[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "width[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "width[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "width[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "width[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "width[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "height[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "height[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "height[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "height[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "height[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "depth[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "depth[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "depth[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "depth[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "depth[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_orders_post",
        "tags": [
          "Order"
        ],
        "responses": {
          "201": {
            "description": "Order resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Order resource.",
        "description": "Creates a Order resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Order resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IOrder"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IOrder"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IOrder"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IOrder"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IOrder"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IOrder"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IOrder"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/orders/hash/{hash}": {
      "get": {
        "operationId": "api_ordershash_hash_get",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Order resource.",
        "description": "Retrieves a Order resource.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "Order identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_ordershash_hash_patch",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Order resource.",
        "description": "Updates the Order resource.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "Order identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IOrder"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/orders/{id}": {
      "get": {
        "operationId": "api_orders_id_get",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Order resource.",
        "description": "Retrieves a Order resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_orders_id_delete",
        "tags": [
          "Order"
        ],
        "responses": {
          "204": {
            "description": "Order resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Order resource.",
        "description": "Removes the Order resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_orders_id_patch",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "Order resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Order resource.",
        "description": "Updates the Order resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Order resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IOrder-UPDATE_ORDER"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/order_items/{id}": {
      "patch": {
        "operationId": "api_order_items_id_patch",
        "tags": [
          "OrderItem"
        ],
        "responses": {
          "200": {
            "description": "OrderItem resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the OrderItem resource.",
        "description": "Updates the OrderItem resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "OrderItem identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated OrderItem resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IOrderItem-UPDATE_ORDER_ITEM"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/orders/{id}/statuses": {
      "get": {
        "operationId": "api_orders_idstatuses_get_collection",
        "tags": [
          "OrderStatusChange"
        ],
        "responses": {
          "200": {
            "description": "OrderStatusChange collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderStatusChange"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderStatusChange"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderStatusChange"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderStatusChange"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderStatusChange"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderStatusChange"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderStatusChange"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of OrderStatusChange resources.",
        "description": "Retrieves the collection of OrderStatusChange resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "OrderStatusChange identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/packeta": {
      "post": {
        "operationId": "api_packeta_post",
        "tags": [
          "Packeta"
        ],
        "responses": {
          "201": {
            "description": "Packeta resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Packeta"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Packeta"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Packeta"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Packeta"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Packeta"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Packeta"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Packeta"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Packeta resource.",
        "description": "Creates a Packeta resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Packeta resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IPacketa"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPacketa"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IPacketa"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPacketa"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPacketa"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IPacketa"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IPacketa"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/payments": {
      "get": {
        "operationId": "api_payments_get_collection",
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "Payment collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Payment"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Payment resources.",
        "description": "Retrieves the collection of Payment resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_payments_post",
        "tags": [
          "Payment"
        ],
        "responses": {
          "201": {
            "description": "Payment resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Payment resource.",
        "description": "Creates a Payment resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Payment resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IPayment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPayment"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IPayment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPayment"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPayment"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IPayment"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IPayment"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/payments/{id}": {
      "get": {
        "operationId": "api_payments_id_get",
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "Payment resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Payment resource.",
        "description": "Retrieves a Payment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_payments_id_delete",
        "tags": [
          "Payment"
        ],
        "responses": {
          "204": {
            "description": "Payment resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Payment resource.",
        "description": "Removes the Payment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_payments_id_patch",
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "Payment resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Payment resource.",
        "description": "Updates the Payment resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Payment resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IPayment"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/orders/{id}/pdfs": {
      "get": {
        "operationId": "api_orders_idpdfs_get_collection",
        "tags": [
          "Pdf"
        ],
        "responses": {
          "200": {
            "description": "Pdf collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pdf"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Pdf resources.",
        "description": "Retrieves the collection of Pdf resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pdf identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[fromDate]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[toDate]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "templateName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "templateName[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/pdfs": {
      "get": {
        "operationId": "api_pdfs_get_collection",
        "tags": [
          "Pdf"
        ],
        "responses": {
          "200": {
            "description": "Pdf collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pdf"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pdf"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Pdf resources.",
        "description": "Retrieves the collection of Pdf resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[fromDate]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[toDate]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "fromDate[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "toDate[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "templateName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "templateName[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_pdfs_post",
        "tags": [
          "Pdf"
        ],
        "responses": {
          "201": {
            "description": "Pdf resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Pdf resource.",
        "description": "Creates a Pdf resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Pdf resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IPdf"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPdf"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IPdf"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPdf"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPdf"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IPdf"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IPdf"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/pdfs/{name}": {
      "get": {
        "operationId": "api_pdfs_name_get",
        "tags": [
          "Pdf"
        ],
        "responses": {
          "200": {
            "description": "Pdf resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Pdf"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Pdf resource.",
        "description": "Retrieves a Pdf resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Pdf identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_pdfs_name_delete",
        "tags": [
          "Pdf"
        ],
        "responses": {
          "204": {
            "description": "Pdf resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Pdf resource.",
        "description": "Removes the Pdf resource.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Pdf identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      }
    },
    "/pick_up_points": {
      "get": {
        "operationId": "api_pick_up_points_get_collection",
        "tags": [
          "PickUpPoint"
        ],
        "responses": {
          "200": {
            "description": "PickUpPoint collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PickUpPoint"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickUpPoint"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickUpPoint"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickUpPoint"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickUpPoint"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickUpPoint"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PickUpPoint"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of PickUpPoint resources.",
        "description": "Retrieves the collection of PickUpPoint resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrier",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrier[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_pick_up_points_post",
        "tags": [
          "PickUpPoint"
        ],
        "responses": {
          "201": {
            "description": "PickUpPoint resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a PickUpPoint resource.",
        "description": "Creates a PickUpPoint resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new PickUpPoint resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IPickUpPoint"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPickUpPoint"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IPickUpPoint"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPickUpPoint"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPickUpPoint"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IPickUpPoint"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IPickUpPoint"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/pick_up_points/{id}": {
      "get": {
        "operationId": "api_pick_up_points_id_get",
        "tags": [
          "PickUpPoint"
        ],
        "responses": {
          "200": {
            "description": "PickUpPoint resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a PickUpPoint resource.",
        "description": "Retrieves a PickUpPoint resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PickUpPoint identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_pick_up_points_id_delete",
        "tags": [
          "PickUpPoint"
        ],
        "responses": {
          "204": {
            "description": "PickUpPoint resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the PickUpPoint resource.",
        "description": "Removes the PickUpPoint resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PickUpPoint identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_pick_up_points_id_patch",
        "tags": [
          "PickUpPoint"
        ],
        "responses": {
          "200": {
            "description": "PickUpPoint resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PickUpPoint"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the PickUpPoint resource.",
        "description": "Updates the PickUpPoint resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PickUpPoint identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated PickUpPoint resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IPickUpPoint"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/price_definitions": {
      "get": {
        "operationId": "api_price_definitions_get_collection",
        "tags": [
          "PriceDefinition"
        ],
        "responses": {
          "200": {
            "description": "PriceDefinition collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PriceDefinition"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDefinition"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDefinition"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDefinition"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDefinition"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDefinition"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceDefinition"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of PriceDefinition resources.",
        "description": "Retrieves the collection of PriceDefinition resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "currency",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "currency[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[currency]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_price_definitions_post",
        "tags": [
          "PriceDefinition"
        ],
        "responses": {
          "201": {
            "description": "PriceDefinition resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a PriceDefinition resource.",
        "description": "Creates a PriceDefinition resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new PriceDefinition resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IPriceDefinition"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPriceDefinition"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IPriceDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPriceDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPriceDefinition"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IPriceDefinition"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IPriceDefinition"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/price_definitions/{identifier}": {
      "get": {
        "operationId": "api_price_definitions_identifier_get",
        "tags": [
          "PriceDefinition"
        ],
        "responses": {
          "200": {
            "description": "PriceDefinition resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a PriceDefinition resource.",
        "description": "Retrieves a PriceDefinition resource.",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "PriceDefinition identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_price_definitions_identifier_patch",
        "tags": [
          "PriceDefinition"
        ],
        "responses": {
          "200": {
            "description": "PriceDefinition resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PriceDefinition"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the PriceDefinition resource.",
        "description": "Updates the PriceDefinition resource.",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "PriceDefinition identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated PriceDefinition resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IPriceDefinition-PRICE_DEFINITION"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/price_levels": {
      "get": {
        "operationId": "api_price_levels_get_collection",
        "tags": [
          "PriceLevel"
        ],
        "responses": {
          "200": {
            "description": "PriceLevel collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PriceLevel"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceLevel"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceLevel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceLevel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceLevel"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceLevel"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceLevel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of PriceLevel resources.",
        "description": "Retrieves the collection of PriceLevel resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrierPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrierPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrierPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrierPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrierPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "paymentPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "paymentPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "paymentPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "paymentPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "paymentPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[carrierPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[paymentPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrier",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "carrier[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "payments",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "payments[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "zones",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "zones[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "amountFrom[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountFrom[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountFrom[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountFrom[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountFrom[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountTo[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountTo[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountTo[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountTo[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "amountTo[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[type]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_price_levels_post",
        "tags": [
          "PriceLevel"
        ],
        "responses": {
          "201": {
            "description": "PriceLevel resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a PriceLevel resource.",
        "description": "Creates a PriceLevel resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new PriceLevel resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IPriceLevel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IPriceLevel"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IPriceLevel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPriceLevel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IPriceLevel"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IPriceLevel"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IPriceLevel"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/price_levels/{id}": {
      "get": {
        "operationId": "api_price_levels_id_get",
        "tags": [
          "PriceLevel"
        ],
        "responses": {
          "200": {
            "description": "PriceLevel resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a PriceLevel resource.",
        "description": "Retrieves a PriceLevel resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PriceLevel identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_price_levels_id_delete",
        "tags": [
          "PriceLevel"
        ],
        "responses": {
          "204": {
            "description": "PriceLevel resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the PriceLevel resource.",
        "description": "Removes the PriceLevel resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PriceLevel identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_price_levels_id_patch",
        "tags": [
          "PriceLevel"
        ],
        "responses": {
          "200": {
            "description": "PriceLevel resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/PriceLevel"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the PriceLevel resource.",
        "description": "Updates the PriceLevel resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PriceLevel identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated PriceLevel resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IPriceLevel"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/producers": {
      "get": {
        "operationId": "api_producers_get_collection",
        "tags": [
          "Producer"
        ],
        "responses": {
          "200": {
            "description": "Producer collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Producer"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Producer"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Producer resources.",
        "description": "Retrieves the collection of Producer resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "visible",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_producers_post",
        "tags": [
          "Producer"
        ],
        "responses": {
          "201": {
            "description": "Producer resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Producer resource.",
        "description": "Creates a Producer resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Producer resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProducer"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProducer"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProducer"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProducer"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProducer"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProducer"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProducer"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/producers/url/{url}": {
      "get": {
        "operationId": "api_producersurl_url_get",
        "tags": [
          "Producer"
        ],
        "responses": {
          "200": {
            "description": "Producer resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Producer resource.",
        "description": "Retrieves a Producer resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "Producer identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/producers/{id}": {
      "get": {
        "operationId": "api_producers_id_get",
        "tags": [
          "Producer"
        ],
        "responses": {
          "200": {
            "description": "Producer resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Producer resource.",
        "description": "Retrieves a Producer resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Producer identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_producers_id_delete",
        "tags": [
          "Producer"
        ],
        "responses": {
          "204": {
            "description": "Producer resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Producer resource.",
        "description": "Removes the Producer resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Producer identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_producers_id_patch",
        "tags": [
          "Producer"
        ],
        "responses": {
          "200": {
            "description": "Producer resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Producer"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Producer resource.",
        "description": "Updates the Producer resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Producer identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Producer resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProducer"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/articles/{id}/related_products": {
      "get": {
        "operationId": "api_articles_idrelated_products_get_collection",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product-GET_PRODUCT"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Product resources.",
        "description": "Retrieves the collection of Product resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "producer",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "producer[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "configurations",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "configurations[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "serialNumbers",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "unit",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "unit[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "ean",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ean[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "sku",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "variants[parameter_id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "informationParameters[parameter_id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[minVariantPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[originalPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[prices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[defaultCategory]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "productSet",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[availability]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[unit]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_variants/url/{url}/product": {
      "get": {
        "operationId": "api_product_variantsurl_urlproduct_get",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Product resource.",
        "description": "Retrieves a Product resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_variants/{id}/product": {
      "get": {
        "operationId": "api_product_variants_idproduct_get",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Product resource.",
        "description": "Retrieves a Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/products": {
      "get": {
        "operationId": "api_products_get_collection",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product-GET_PRODUCT"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Product resources.",
        "description": "Retrieves the collection of Product resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "producer",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "producer[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "configurations",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "configurations[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "serialNumbers",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "unit",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "unit[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "ean",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ean[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "sku",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "variants[parameter_id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "informationParameters[parameter_id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[minVariantPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[originalPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[prices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[defaultCategory]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "productSet",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[availability]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[unit]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_products_post",
        "tags": [
          "Product"
        ],
        "responses": {
          "201": {
            "description": "Product resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Product resource.",
        "description": "Creates a Product resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Product resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProduct"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProduct"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProduct"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProduct"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProduct"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProduct"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProduct"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/products/url/{url}": {
      "get": {
        "operationId": "api_productsurl_url_get",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Product resource.",
        "description": "Retrieves a Product resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "api_products_id_get",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Product resource.",
        "description": "Retrieves a Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_products_id_delete",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Product resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Product resource.",
        "description": "Removes the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_products_id_patch",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Product resource.",
        "description": "Updates the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Product resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProduct"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/products/{id}/clone": {
      "get": {
        "operationId": "api_products_idclone_get",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Product-GET_PRODUCT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Product resource.",
        "description": "Retrieves a Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/products/{id}/related_products": {
      "get": {
        "operationId": "api_products_idrelated_products_get_collection",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product-GET_PRODUCT"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product-GET_PRODUCT"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Product resources.",
        "description": "Retrieves the collection of Product resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "producer",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "producer[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "configurations",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "configurations[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "serialNumbers",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "unit",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "unit[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "ean",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ean[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "sku",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "variants[parameter_id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "informationParameters[parameter_id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minVariantPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[minVariantPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[originalPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[prices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[defaultCategory]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!defaultCategory[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "!categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "!categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "productSet",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[availability]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[unit]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_configurations": {
      "get": {
        "operationId": "api_product_configurations_get_collection",
        "tags": [
          "ProductConfiguration"
        ],
        "responses": {
          "200": {
            "description": "ProductConfiguration collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductConfiguration"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductConfiguration resources.",
        "description": "Retrieves the collection of ProductConfiguration resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[prices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_product_configurations_post",
        "tags": [
          "ProductConfiguration"
        ],
        "responses": {
          "201": {
            "description": "ProductConfiguration resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a ProductConfiguration resource.",
        "description": "Creates a ProductConfiguration resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ProductConfiguration resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductConfiguration"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductConfiguration"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProductConfiguration"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductConfiguration"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductConfiguration"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProductConfiguration"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProductConfiguration"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_configurations/{id}": {
      "get": {
        "operationId": "api_product_configurations_id_get",
        "tags": [
          "ProductConfiguration"
        ],
        "responses": {
          "200": {
            "description": "ProductConfiguration resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a ProductConfiguration resource.",
        "description": "Retrieves a ProductConfiguration resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductConfiguration identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_product_configurations_id_delete",
        "tags": [
          "ProductConfiguration"
        ],
        "responses": {
          "204": {
            "description": "ProductConfiguration resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the ProductConfiguration resource.",
        "description": "Removes the ProductConfiguration resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductConfiguration identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_product_configurations_id_patch",
        "tags": [
          "ProductConfiguration"
        ],
        "responses": {
          "200": {
            "description": "ProductConfiguration resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguration"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the ProductConfiguration resource.",
        "description": "Updates the ProductConfiguration resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductConfiguration identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated ProductConfiguration resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductConfiguration"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_variants/{id}/product_configurations": {
      "get": {
        "operationId": "api_product_variants_idproduct_configurations_get_collection",
        "tags": [
          "ProductConfiguration"
        ],
        "responses": {
          "200": {
            "description": "ProductConfiguration collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductConfiguration"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductConfiguration resources.",
        "description": "Retrieves the collection of ProductConfiguration resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductConfiguration identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[prices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/products/{id}/product_configurations": {
      "get": {
        "operationId": "api_products_idproduct_configurations_get_collection",
        "tags": [
          "ProductConfiguration"
        ],
        "responses": {
          "200": {
            "description": "ProductConfiguration collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductConfiguration"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductConfiguration"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductConfiguration resources.",
        "description": "Retrieves the collection of ProductConfiguration resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductConfiguration identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[position]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[prices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_in_sets": {
      "post": {
        "operationId": "api_product_in_sets_post",
        "tags": [
          "ProductInSet"
        ],
        "responses": {
          "201": {
            "description": "ProductInSet resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a ProductInSet resource.",
        "description": "Creates a ProductInSet resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ProductInSet resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductInSet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductInSet"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProductInSet"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductInSet"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductInSet"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProductInSet"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProductInSet"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_in_sets/{id}": {
      "delete": {
        "operationId": "api_product_in_sets_id_delete",
        "tags": [
          "ProductInSet"
        ],
        "responses": {
          "204": {
            "description": "ProductInSet resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the ProductInSet resource.",
        "description": "Removes the ProductInSet resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductInSet identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_product_in_sets_id_patch",
        "tags": [
          "ProductInSet"
        ],
        "responses": {
          "200": {
            "description": "ProductInSet resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInSet"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the ProductInSet resource.",
        "description": "Updates the ProductInSet resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductInSet identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated ProductInSet resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductInSet-UPDATE_PRODUCT_IN_SET"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/products/{id}/products_in_set": {
      "get": {
        "operationId": "api_products_idproducts_in_set_get_collection",
        "tags": [
          "ProductInSet"
        ],
        "responses": {
          "200": {
            "description": "ProductInSet collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductInSet-GET_PRODUCT_IN_SET"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInSet-GET_PRODUCT_IN_SET"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInSet-GET_PRODUCT_IN_SET"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInSet-GET_PRODUCT_IN_SET"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInSet-GET_PRODUCT_IN_SET"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInSet-GET_PRODUCT_IN_SET"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInSet-GET_PRODUCT_IN_SET"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductInSet resources.",
        "description": "Retrieves the collection of ProductInSet resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductInSet identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_information_parameters": {
      "post": {
        "operationId": "api_product_information_parameters_post",
        "tags": [
          "ProductInformationParameter"
        ],
        "responses": {
          "201": {
            "description": "ProductInformationParameter resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a ProductInformationParameter resource.",
        "description": "Creates a ProductInformationParameter resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ProductInformationParameter resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductInformationParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductInformationParameter"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProductInformationParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductInformationParameter"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductInformationParameter"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProductInformationParameter"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProductInformationParameter"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_information_parameters/{id}": {
      "delete": {
        "operationId": "api_product_information_parameters_id_delete",
        "tags": [
          "ProductInformationParameter"
        ],
        "responses": {
          "204": {
            "description": "ProductInformationParameter resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the ProductInformationParameter resource.",
        "description": "Removes the ProductInformationParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_product_information_parameters_id_patch",
        "tags": [
          "ProductInformationParameter"
        ],
        "responses": {
          "200": {
            "description": "ProductInformationParameter resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductInformationParameter"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the ProductInformationParameter resource.",
        "description": "Updates the ProductInformationParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated ProductInformationParameter resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductInformationParameter"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/products/{id}/information_parameters": {
      "get": {
        "operationId": "api_products_idinformation_parameters_get_collection",
        "tags": [
          "ProductInformationParameter"
        ],
        "responses": {
          "200": {
            "description": "ProductInformationParameter collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductInformationParameter-GET_PARAMETERS"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductInformationParameter-GET_PARAMETERS"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductInformationParameter resources.",
        "description": "Retrieves the collection of ProductInformationParameter resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_quantity_prices": {
      "post": {
        "operationId": "api_product_quantity_prices_post",
        "tags": [
          "ProductQuantityPrice"
        ],
        "responses": {
          "201": {
            "description": "ProductQuantityPrice resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a ProductQuantityPrice resource.",
        "description": "Creates a ProductQuantityPrice resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ProductQuantityPrice resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductQuantityPrice"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductQuantityPrice"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProductQuantityPrice"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductQuantityPrice"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductQuantityPrice"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProductQuantityPrice"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProductQuantityPrice"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_quantity_prices/{id}": {
      "delete": {
        "operationId": "api_product_quantity_prices_id_delete",
        "tags": [
          "ProductQuantityPrice"
        ],
        "responses": {
          "204": {
            "description": "ProductQuantityPrice resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the ProductQuantityPrice resource.",
        "description": "Removes the ProductQuantityPrice resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductQuantityPrice identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_product_quantity_prices_id_patch",
        "tags": [
          "ProductQuantityPrice"
        ],
        "responses": {
          "200": {
            "description": "ProductQuantityPrice resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductQuantityPrice"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the ProductQuantityPrice resource.",
        "description": "Updates the ProductQuantityPrice resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductQuantityPrice identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated ProductQuantityPrice resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductQuantityPrice"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_stock_audit_trails": {
      "get": {
        "operationId": "api_product_stock_audit_trails_get_collection",
        "tags": [
          "ProductStockAuditTrail"
        ],
        "responses": {
          "200": {
            "description": "ProductStockAuditTrail collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductStockAuditTrail"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStockAuditTrail"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStockAuditTrail"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStockAuditTrail"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStockAuditTrail"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStockAuditTrail"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductStockAuditTrail"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductStockAuditTrail resources.",
        "description": "Retrieves the collection of ProductStockAuditTrail resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "product",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "product[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "operationType",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "operationType[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/product_variants": {
      "get": {
        "operationId": "api_product_variants_get_collection",
        "tags": [
          "ProductVariant"
        ],
        "responses": {
          "200": {
            "description": "ProductVariant collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductVariant resources.",
        "description": "Retrieves the collection of ProductVariant resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "product",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "product[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "serialNumbers",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "unit",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "unit[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "ean",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ean[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "sku",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[availability]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[unit]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[originalPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[prices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_product_variants_post",
        "tags": [
          "ProductVariant"
        ],
        "responses": {
          "201": {
            "description": "ProductVariant resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant.ProductVariantOutput-GET_PRODUCT_VARIANT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant.ProductVariantOutput-GET_PRODUCT_VARIANT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant.ProductVariantOutput-GET_PRODUCT_VARIANT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant.ProductVariantOutput-GET_PRODUCT_VARIANT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant.ProductVariantOutput-GET_PRODUCT_VARIANT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant.ProductVariantOutput-GET_PRODUCT_VARIANT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant.ProductVariantOutput-GET_PRODUCT_VARIANT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a ProductVariant resource.",
        "description": "Creates a ProductVariant resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ProductVariant resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariant.ProductVariantInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariant.ProductVariantInput"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariant.ProductVariantInput"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariant.ProductVariantInput"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariant.ProductVariantInput"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariant.ProductVariantInput"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariant.ProductVariantInput"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_variants/url/{url}": {
      "get": {
        "operationId": "api_product_variantsurl_url_get",
        "tags": [
          "ProductVariant"
        ],
        "responses": {
          "200": {
            "description": "ProductVariant resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a ProductVariant resource.",
        "description": "Retrieves a ProductVariant resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "ProductVariant identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_variants/{id}": {
      "get": {
        "operationId": "api_product_variants_id_get",
        "tags": [
          "ProductVariant"
        ],
        "responses": {
          "200": {
            "description": "ProductVariant resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a ProductVariant resource.",
        "description": "Retrieves a ProductVariant resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariant identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_product_variants_id_delete",
        "tags": [
          "ProductVariant"
        ],
        "responses": {
          "204": {
            "description": "ProductVariant resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the ProductVariant resource.",
        "description": "Removes the ProductVariant resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariant identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_product_variants_id_patch",
        "tags": [
          "ProductVariant"
        ],
        "responses": {
          "200": {
            "description": "ProductVariant resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the ProductVariant resource.",
        "description": "Updates the ProductVariant resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariant identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated ProductVariant resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariant"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/products/{id}/variants": {
      "get": {
        "operationId": "api_products_idvariants_get_collection",
        "tags": [
          "ProductVariant"
        ],
        "responses": {
          "200": {
            "description": "ProductVariant collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductVariant resources.",
        "description": "Retrieves the collection of ProductVariant resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariant identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "random",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "product",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "product[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "serialNumbers",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "availability[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "unit",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "unit[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "ean",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ean[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "sku",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[availability]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[unit]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "originalPrices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "prices[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[originalPrices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[prices]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "purchasePrice[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "minStockCount[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[between]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[gte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "weight[lte]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_variants/{id}/parameters": {
      "get": {
        "operationId": "api_product_variants_idparameters_get_collection",
        "tags": [
          "ProductVariantCustomParameter"
        ],
        "responses": {
          "200": {
            "description": "ProductVariantCustomParameter collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PARAMETERS"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PARAMETERS"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PARAMETERS"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PARAMETERS"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductVariantCustomParameter resources.",
        "description": "Retrieves the collection of ProductVariantCustomParameter resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariantCustomParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_variant_information_parameters": {
      "post": {
        "operationId": "api_product_variant_information_parameters_post",
        "tags": [
          "ProductVariantInformationParameter"
        ],
        "responses": {
          "201": {
            "description": "ProductVariantInformationParameter resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a ProductVariantInformationParameter resource.",
        "description": "Creates a ProductVariantInformationParameter resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ProductVariantInformationParameter resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantInformationParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantInformationParameter"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantInformationParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantInformationParameter"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantInformationParameter"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantInformationParameter"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantInformationParameter"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_variant_information_parameters/{id}": {
      "delete": {
        "operationId": "api_product_variant_information_parameters_id_delete",
        "tags": [
          "ProductVariantInformationParameter"
        ],
        "responses": {
          "204": {
            "description": "ProductVariantInformationParameter resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the ProductVariantInformationParameter resource.",
        "description": "Removes the ProductVariantInformationParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariantInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_product_variant_information_parameters_id_patch",
        "tags": [
          "ProductVariantInformationParameter"
        ],
        "responses": {
          "200": {
            "description": "ProductVariantInformationParameter resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantInformationParameter"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the ProductVariantInformationParameter resource.",
        "description": "Updates the ProductVariantInformationParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariantInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated ProductVariantInformationParameter resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantInformationParameter"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_variants/{id}/information_parameters": {
      "get": {
        "operationId": "api_product_variants_idinformation_parameters_get_collection",
        "tags": [
          "ProductVariantInformationParameter"
        ],
        "responses": {
          "200": {
            "description": "ProductVariantInformationParameter collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductVariantInformationParameter-GET_PRODUCT_VARIANT"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantInformationParameter-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantInformationParameter-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantInformationParameter-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantInformationParameter-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantInformationParameter-GET_PRODUCT_VARIANT"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantInformationParameter-GET_PRODUCT_VARIANT"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductVariantInformationParameter resources.",
        "description": "Retrieves the collection of ProductVariantInformationParameter resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariantInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/product_variant_quantity_prices": {
      "post": {
        "operationId": "api_product_variant_quantity_prices_post",
        "tags": [
          "ProductVariantQuantityPrice"
        ],
        "responses": {
          "201": {
            "description": "ProductVariantQuantityPrice resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a ProductVariantQuantityPrice resource.",
        "description": "Creates a ProductVariantQuantityPrice resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new ProductVariantQuantityPrice resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantQuantityPrice"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantQuantityPrice"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantQuantityPrice"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantQuantityPrice"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantQuantityPrice"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantQuantityPrice"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantQuantityPrice"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_variant_quantity_prices/{id}": {
      "delete": {
        "operationId": "api_product_variant_quantity_prices_id_delete",
        "tags": [
          "ProductVariantQuantityPrice"
        ],
        "responses": {
          "204": {
            "description": "ProductVariantQuantityPrice resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the ProductVariantQuantityPrice resource.",
        "description": "Removes the ProductVariantQuantityPrice resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariantQuantityPrice identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_product_variant_quantity_prices_id_patch",
        "tags": [
          "ProductVariantQuantityPrice"
        ],
        "responses": {
          "200": {
            "description": "ProductVariantQuantityPrice resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVariantQuantityPrice"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the ProductVariantQuantityPrice resource.",
        "description": "Updates the ProductVariantQuantityPrice resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ProductVariantQuantityPrice identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated ProductVariantQuantityPrice resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IProductVariantQuantityPrice"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/product_variant_stock_audit_trails": {
      "get": {
        "operationId": "api_product_variant_stock_audit_trails_get_collection",
        "tags": [
          "ProductVariantStockAuditTrail"
        ],
        "responses": {
          "200": {
            "description": "ProductVariantStockAuditTrail collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductVariantStockAuditTrail"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantStockAuditTrail"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantStockAuditTrail"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantStockAuditTrail"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantStockAuditTrail"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantStockAuditTrail"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductVariantStockAuditTrail"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of ProductVariantStockAuditTrail resources.",
        "description": "Retrieves the collection of ProductVariantStockAuditTrail resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productVariant",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "productVariant[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "operationType",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "operationType[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/qr_codes": {
      "post": {
        "operationId": "api_qr_codes_post",
        "tags": [
          "QRCode"
        ],
        "responses": {
          "201": {
            "description": "QRCode resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCode"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCode"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/QRCode"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/QRCode"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/QRCode"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/QRCode"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/QRCode"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a QRCode resource.",
        "description": "Creates a QRCode resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new QRCode resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IQRCode"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IQRCode"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IQRCode"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IQRCode"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IQRCode"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IQRCode"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IQRCode"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/redis": {
      "post": {
        "operationId": "api_redis_post",
        "tags": [
          "Redis"
        ],
        "responses": {
          "201": {
            "description": "Redis resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Redis resource.",
        "description": "Creates a Redis resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Redis resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IRedis"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IRedis"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IRedis"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IRedis"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IRedis"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IRedis"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IRedis"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/redis/{key}": {
      "get": {
        "operationId": "api_redis_key_get",
        "tags": [
          "Redis"
        ],
        "responses": {
          "200": {
            "description": "Redis resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Redis-REDIS"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Redis resource.",
        "description": "Retrieves a Redis resource.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Redis identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_redis_key_delete",
        "tags": [
          "Redis"
        ],
        "responses": {
          "204": {
            "description": "Redis resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Redis resource.",
        "description": "Removes the Redis resource.",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Redis identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      }
    },
    "/reviews": {
      "get": {
        "operationId": "api_reviews_get_collection",
        "tags": [
          "Review"
        ],
        "responses": {
          "200": {
            "description": "Review collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Review"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Review resources.",
        "description": "Retrieves the collection of Review resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stars",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stars[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "product",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "product[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[stars]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_reviews_post",
        "tags": [
          "Review"
        ],
        "responses": {
          "201": {
            "description": "Review resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Review resource.",
        "description": "Creates a Review resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Review resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IReview"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IReview"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IReview"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IReview"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IReview"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IReview"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IReview"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/reviews/heureka": {
      "get": {
        "operationId": "api_reviewsheureka_get",
        "tags": [
          "Review"
        ],
        "responses": {
          "200": {
            "description": "Review resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Review resource.",
        "description": "Retrieves a Review resource.",
        "parameters": [
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/reviews/{id}": {
      "get": {
        "operationId": "api_reviews_id_get",
        "tags": [
          "Review"
        ],
        "responses": {
          "200": {
            "description": "Review resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Review resource.",
        "description": "Retrieves a Review resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Review identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_reviews_id_delete",
        "tags": [
          "Review"
        ],
        "responses": {
          "204": {
            "description": "Review resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Review resource.",
        "description": "Removes the Review resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Review identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_reviews_id_patch",
        "tags": [
          "Review"
        ],
        "responses": {
          "200": {
            "description": "Review resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Review resource.",
        "description": "Updates the Review resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Review identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Review resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IReview"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/roles": {
      "get": {
        "operationId": "api_roles_get_collection",
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "Role collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Role resources.",
        "description": "Retrieves the collection of Role resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_roles_post",
        "tags": [
          "Role"
        ],
        "responses": {
          "201": {
            "description": "Role resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Role resource.",
        "description": "Creates a Role resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Role resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IRole"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IRole"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IRole"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IRole"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IRole"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IRole"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IRole"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "api_roles_id_get",
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "Role resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Role resource.",
        "description": "Retrieves a Role resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_roles_id_delete",
        "tags": [
          "Role"
        ],
        "responses": {
          "204": {
            "description": "Role resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Role resource.",
        "description": "Removes the Role resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_roles_id_patch",
        "tags": [
          "Role"
        ],
        "responses": {
          "200": {
            "description": "Role resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Role resource.",
        "description": "Updates the Role resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Role identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Role resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IRole"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/shops": {
      "get": {
        "operationId": "api_shops_get_collection",
        "tags": [
          "Shop"
        ],
        "responses": {
          "200": {
            "description": "Shop collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Shop"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Shop resources.",
        "description": "Retrieves the collection of Shop resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "telephone",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "companyName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ico",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ico[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "language[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "handleStock",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "stockAuditTrail",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "generatePayBySquare",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "default",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "heurekaShopCertificationEnabled",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_shops_post",
        "tags": [
          "Shop"
        ],
        "responses": {
          "201": {
            "description": "Shop resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Shop resource.",
        "description": "Creates a Shop resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Shop resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IShop"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IShop"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IShop"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IShop"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IShop"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IShop"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IShop"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/shops/get/default": {
      "get": {
        "operationId": "api_shopsgetdefault_get",
        "tags": [
          "Shop"
        ],
        "responses": {
          "200": {
            "description": "Shop resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Shop resource.",
        "description": "Retrieves a Shop resource.",
        "parameters": [
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/shops/{id}": {
      "get": {
        "operationId": "api_shops_id_get",
        "tags": [
          "Shop"
        ],
        "responses": {
          "200": {
            "description": "Shop resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Shop resource.",
        "description": "Retrieves a Shop resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_shops_id_patch",
        "tags": [
          "Shop"
        ],
        "responses": {
          "200": {
            "description": "Shop resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Shop resource.",
        "description": "Updates the Shop resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Shop identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Shop resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IShop"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/orders/{id}/sms": {
      "get": {
        "operationId": "api_orders_idsms_get_collection",
        "tags": [
          "Sms"
        ],
        "responses": {
          "200": {
            "description": "Sms collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Sms"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Sms resources.",
        "description": "Retrieves the collection of Sms resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sms identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "templateName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "templateName[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[templateName]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/sms": {
      "get": {
        "operationId": "api_sms_get_collection",
        "tags": [
          "Sms"
        ],
        "responses": {
          "200": {
            "description": "Sms collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Sms"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sms"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Sms resources.",
        "description": "Retrieves the collection of Sms resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "templateName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "templateName[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[templateName]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_sms_post",
        "tags": [
          "Sms"
        ],
        "responses": {
          "201": {
            "description": "Sms resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Sms resource.",
        "description": "Creates a Sms resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Sms resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ISms"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISms"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ISms"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ISms"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ISms"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ISms"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ISms"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/sms/{id}": {
      "get": {
        "operationId": "api_sms_id_get",
        "tags": [
          "Sms"
        ],
        "responses": {
          "200": {
            "description": "Sms resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Sms"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Sms resource.",
        "description": "Retrieves a Sms resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Sms identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      }
    },
    "/sms_templates": {
      "get": {
        "operationId": "api_sms_templates_get_collection",
        "tags": [
          "SmsTemplate"
        ],
        "responses": {
          "200": {
            "description": "SmsTemplate collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SmsTemplate"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmsTemplate"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmsTemplate"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmsTemplate"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmsTemplate"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmsTemplate"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmsTemplate"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of SmsTemplate resources.",
        "description": "Retrieves the collection of SmsTemplate resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "name[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      }
    },
    "/sms_templates/{id}": {
      "get": {
        "operationId": "api_sms_templates_id_get",
        "tags": [
          "SmsTemplate"
        ],
        "responses": {
          "200": {
            "description": "SmsTemplate resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a SmsTemplate resource.",
        "description": "Retrieves a SmsTemplate resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SmsTemplate identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_sms_templates_id_patch",
        "tags": [
          "SmsTemplate"
        ],
        "responses": {
          "200": {
            "description": "SmsTemplate resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/SmsTemplate"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the SmsTemplate resource.",
        "description": "Updates the SmsTemplate resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "SmsTemplate identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated SmsTemplate resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ISmsTemplate"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/sps": {
      "post": {
        "operationId": "api_sps_post",
        "tags": [
          "Sps"
        ],
        "responses": {
          "201": {
            "description": "Sps resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Sps"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sps"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Sps"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Sps"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Sps"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Sps"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Sps"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Sps resource.",
        "description": "Creates a Sps resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Sps resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ISps"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISps"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ISps"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ISps"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ISps"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ISps"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ISps"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/superfaktura": {
      "post": {
        "operationId": "api_superfaktura_post",
        "tags": [
          "Superfaktura"
        ],
        "responses": {
          "201": {
            "description": "Superfaktura resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Superfaktura"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Superfaktura"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Superfaktura"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Superfaktura"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Superfaktura"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Superfaktura"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Superfaktura"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Superfaktura resource.",
        "description": "Creates a Superfaktura resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Superfaktura resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ISuperfaktura"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISuperfaktura"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ISuperfaktura"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ISuperfaktura"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ISuperfaktura"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ISuperfaktura"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ISuperfaktura"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/tags/{resource}": {
      "get": {
        "operationId": "api_tags_resource_get",
        "tags": [
          "Tag"
        ],
        "responses": {
          "200": {
            "description": "Tag resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Tag resource.",
        "description": "Retrieves a Tag resource.",
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "description": "Tag identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      }
    },
    "/orders/{id}/transactions": {
      "get": {
        "operationId": "api_orders_idtransactions_get_collection",
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "Transaction collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Transaction resources.",
        "description": "Retrieves the collection of Transaction resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transaction identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "status[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[status]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[paymentAttempt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "priceDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Price definition"
          },
          {
            "name": "taxDefinition",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Tax definition"
          }
        ],
        "deprecated": false
      }
    },
    "/transactions": {
      "post": {
        "operationId": "api_transactions_post",
        "tags": [
          "Transaction"
        ],
        "responses": {
          "201": {
            "description": "Transaction resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Transaction resource.",
        "description": "Creates a Transaction resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Transaction resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/ITransaction"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ITransaction"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/ITransaction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ITransaction"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ITransaction"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/ITransaction"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ITransaction"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/users": {
      "get": {
        "operationId": "api_users_get_collection",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of User resources.",
        "description": "Retrieves the collection of User resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "informationParameters.customParameterItem",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "informationParameters.customParameterItem[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "establishments",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "establishments[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "gender",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "gender[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "role[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "permissionRole",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "permissionRole[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "telephone",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "companyName",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ico",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "ico[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "shop",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shop[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "userGroup",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "userGroup[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "loyaltyPoints",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "loyaltyPoints[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "exists[establishments]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[gender]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[enabled]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[familyName]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[loyaltyPoints]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "salesReferent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_users_post",
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a User resource.",
        "description": "Creates a User resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new User resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/users/change_password": {
      "post": {
        "operationId": "api_userschange_password_post",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHANGE_PASSWORD_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHANGE_PASSWORD_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHANGE_PASSWORD_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHANGE_PASSWORD_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHANGE_PASSWORD_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHANGE_PASSWORD_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHANGE_PASSWORD_OUTPUT"
                }
              }
            }
          }
        },
        "summary": "Change user password.",
        "description": "Change user password.",
        "parameters": [],
        "requestBody": {
          "description": "Change user password.",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHANGE_PASSWORD_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHANGE_PASSWORD_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHANGE_PASSWORD_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHANGE_PASSWORD_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHANGE_PASSWORD_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHANGE_PASSWORD_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHANGE_PASSWORD_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/users/check_email": {
      "post": {
        "operationId": "api_userscheck_email_post",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHECK_EMAIL_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHECK_EMAIL_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHECK_EMAIL_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHECK_EMAIL_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHECK_EMAIL_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHECK_EMAIL_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User-CHECK_EMAIL_OUTPUT"
                }
              }
            }
          }
        },
        "summary": "Check if user with given email exists.",
        "description": "Check if user with given email exists.",
        "parameters": [],
        "requestBody": {
          "description": "Check if user with given email exists.",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHECK_EMAIL_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHECK_EMAIL_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHECK_EMAIL_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHECK_EMAIL_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHECK_EMAIL_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHECK_EMAIL_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IUser-CHECK_EMAIL_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/users/forgot_password": {
      "post": {
        "operationId": "api_usersforgot_password_post",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User-FORGOT_PASSWORD_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-FORGOT_PASSWORD_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-FORGOT_PASSWORD_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-FORGOT_PASSWORD_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-FORGOT_PASSWORD_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User-FORGOT_PASSWORD_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User-FORGOT_PASSWORD_OUTPUT"
                }
              }
            }
          }
        },
        "summary": "Reset forgotten password.",
        "description": "Reset forgotten password.",
        "parameters": [],
        "requestBody": {
          "description": "Reset forgotten password.",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-FORGOT_PASSWORD_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-FORGOT_PASSWORD_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IUser-FORGOT_PASSWORD_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-FORGOT_PASSWORD_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-FORGOT_PASSWORD_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IUser-FORGOT_PASSWORD_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IUser-FORGOT_PASSWORD_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/users/hash/{hash}": {
      "get": {
        "operationId": "api_usershash_hash_get",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User-VERIFICATION_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-VERIFICATION_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-VERIFICATION_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-VERIFICATION_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-VERIFICATION_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User-VERIFICATION_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User-VERIFICATION_OUTPUT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a User resource.",
        "description": "Retrieves a User resource.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/users/registration": {
      "post": {
        "operationId": "api_usersregistration_post",
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User-REGISTRATION_OUTPUT"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User-REGISTRATION_OUTPUT"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User-REGISTRATION_OUTPUT"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-REGISTRATION_OUTPUT"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User-REGISTRATION_OUTPUT"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User-REGISTRATION_OUTPUT"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User-REGISTRATION_OUTPUT"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a User resource.",
        "description": "Creates a User resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new User resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-REGISTRATION_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-REGISTRATION_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IUser-REGISTRATION_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-REGISTRATION_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-REGISTRATION_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IUser-REGISTRATION_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IUser-REGISTRATION_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/users/verification": {
      "post": {
        "operationId": "api_usersverification_post",
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "User resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a User resource.",
        "description": "Creates a User resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new User resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-VERIFICATION_INPUT"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUser-VERIFICATION_INPUT"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IUser-VERIFICATION_INPUT"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-VERIFICATION_INPUT"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUser-VERIFICATION_INPUT"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IUser-VERIFICATION_INPUT"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IUser-VERIFICATION_INPUT"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "api_users_id_get",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a User resource.",
        "description": "Retrieves a User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_users_id_delete",
        "tags": [
          "User"
        ],
        "responses": {
          "204": {
            "description": "User resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the User resource.",
        "description": "Removes the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_users_id_patch",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "User resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the User resource.",
        "description": "Updates the User resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated User resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IUser"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/user_groups": {
      "get": {
        "operationId": "api_user_groups_get_collection",
        "tags": [
          "UserGroup"
        ],
        "responses": {
          "200": {
            "description": "UserGroup collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserGroup"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of UserGroup resources.",
        "description": "Retrieves the collection of UserGroup resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "discounts",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "discounts[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceId[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "referenceData",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_user_groups_post",
        "tags": [
          "UserGroup"
        ],
        "responses": {
          "201": {
            "description": "UserGroup resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a UserGroup resource.",
        "description": "Creates a UserGroup resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new UserGroup resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IUserGroup"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUserGroup"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IUserGroup"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUserGroup"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUserGroup"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IUserGroup"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IUserGroup"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/user_groups/{id}": {
      "get": {
        "operationId": "api_user_groups_id_get",
        "tags": [
          "UserGroup"
        ],
        "responses": {
          "200": {
            "description": "UserGroup resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a UserGroup resource.",
        "description": "Retrieves a UserGroup resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserGroup identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_user_groups_id_delete",
        "tags": [
          "UserGroup"
        ],
        "responses": {
          "204": {
            "description": "UserGroup resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the UserGroup resource.",
        "description": "Removes the UserGroup resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserGroup identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_user_groups_id_patch",
        "tags": [
          "UserGroup"
        ],
        "responses": {
          "200": {
            "description": "UserGroup resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the UserGroup resource.",
        "description": "Updates the UserGroup resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserGroup identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated UserGroup resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IUserGroup"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/user_information_parameters": {
      "post": {
        "operationId": "api_user_information_parameters_post",
        "tags": [
          "UserInformationParameter"
        ],
        "responses": {
          "201": {
            "description": "UserInformationParameter resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a UserInformationParameter resource.",
        "description": "Creates a UserInformationParameter resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new UserInformationParameter resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IUserInformationParameter"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IUserInformationParameter"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IUserInformationParameter"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUserInformationParameter"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IUserInformationParameter"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IUserInformationParameter"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IUserInformationParameter"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/user_information_parameters/{id}": {
      "delete": {
        "operationId": "api_user_information_parameters_id_delete",
        "tags": [
          "UserInformationParameter"
        ],
        "responses": {
          "204": {
            "description": "UserInformationParameter resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the UserInformationParameter resource.",
        "description": "Removes the UserInformationParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_user_information_parameters_id_patch",
        "tags": [
          "UserInformationParameter"
        ],
        "responses": {
          "200": {
            "description": "UserInformationParameter resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationParameter"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the UserInformationParameter resource.",
        "description": "Updates the UserInformationParameter resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated UserInformationParameter resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IUserInformationParameter"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/users/{id}/information_parameters": {
      "get": {
        "operationId": "api_users_idinformation_parameters_get_collection",
        "tags": [
          "UserInformationParameter"
        ],
        "responses": {
          "200": {
            "description": "UserInformationParameter collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserInformationParameter-GET_PARAMETERS"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInformationParameter-GET_PARAMETERS"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInformationParameter-GET_PARAMETERS"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of UserInformationParameter resources.",
        "description": "Retrieves the collection of UserInformationParameter resources.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UserInformationParameter identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/web_pages": {
      "get": {
        "operationId": "api_web_pages_get_collection",
        "tags": [
          "WebPage"
        ],
        "responses": {
          "200": {
            "description": "WebPage collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebPage"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebPage"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebPage"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebPage"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebPage"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebPage"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebPage"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of WebPage resources.",
        "description": "Retrieves the collection of WebPage resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "exists[parent]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "parent[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "template",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "template[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "tags[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "tags[and][]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[createdAt]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "createdAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_before]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "updatedAt[strictly_after]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "onOff",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cf[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cfExists[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "shops",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_web_pages_post",
        "tags": [
          "WebPage"
        ],
        "responses": {
          "201": {
            "description": "WebPage resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a WebPage resource.",
        "description": "Creates a WebPage resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new WebPage resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IWebPage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IWebPage"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IWebPage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IWebPage"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IWebPage"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IWebPage"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IWebPage"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/web_pages/url/{url}": {
      "get": {
        "operationId": "api_web_pagesurl_url_get",
        "tags": [
          "WebPage"
        ],
        "responses": {
          "200": {
            "description": "WebPage resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a WebPage resource.",
        "description": "Retrieves a WebPage resource.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "WebPage identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/web_pages/{id}": {
      "get": {
        "operationId": "api_web_pages_id_get",
        "tags": [
          "WebPage"
        ],
        "responses": {
          "200": {
            "description": "WebPage resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a WebPage resource.",
        "description": "Retrieves a WebPage resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebPage identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_web_pages_id_delete",
        "tags": [
          "WebPage"
        ],
        "responses": {
          "204": {
            "description": "WebPage resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the WebPage resource.",
        "description": "Removes the WebPage resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebPage identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_web_pages_id_patch",
        "tags": [
          "WebPage"
        ],
        "responses": {
          "200": {
            "description": "WebPage resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the WebPage resource.",
        "description": "Updates the WebPage resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebPage identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated WebPage resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IWebPage"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/web_pages/{id}/clone": {
      "get": {
        "operationId": "api_web_pages_idclone_get",
        "tags": [
          "WebPage"
        ],
        "responses": {
          "200": {
            "description": "WebPage resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebPage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a WebPage resource.",
        "description": "Retrieves a WebPage resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebPage identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "width",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image width"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer"
            },
            "description": "Image height"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "description": "Format of the image allowed are jpg, png and webp"
          }
        ],
        "deprecated": false
      }
    },
    "/web_translations": {
      "get": {
        "operationId": "api_web_translations_get_collection",
        "tags": [
          "WebTranslation"
        ],
        "responses": {
          "200": {
            "description": "WebTranslation collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebTranslation"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebTranslation"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebTranslation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebTranslation"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebTranslation"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebTranslation"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebTranslation"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of WebTranslation resources.",
        "description": "Retrieves the collection of WebTranslation resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "type[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "language[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_web_translations_post",
        "tags": [
          "WebTranslation"
        ],
        "responses": {
          "201": {
            "description": "WebTranslation resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a WebTranslation resource.",
        "description": "Creates a WebTranslation resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new WebTranslation resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IWebTranslation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IWebTranslation"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IWebTranslation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IWebTranslation"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IWebTranslation"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IWebTranslation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IWebTranslation"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/web_translations/{id}": {
      "get": {
        "operationId": "api_web_translations_id_get",
        "tags": [
          "WebTranslation"
        ],
        "responses": {
          "200": {
            "description": "WebTranslation resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a WebTranslation resource.",
        "description": "Retrieves a WebTranslation resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebTranslation identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_web_translations_id_delete",
        "tags": [
          "WebTranslation"
        ],
        "responses": {
          "204": {
            "description": "WebTranslation resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the WebTranslation resource.",
        "description": "Removes the WebTranslation resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebTranslation identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_web_translations_id_patch",
        "tags": [
          "WebTranslation"
        ],
        "responses": {
          "200": {
            "description": "WebTranslation resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/WebTranslation"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the WebTranslation resource.",
        "description": "Updates the WebTranslation resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "WebTranslation identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated WebTranslation resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IWebTranslation"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/wishlists": {
      "get": {
        "operationId": "api_wishlists_get_collection",
        "tags": [
          "Wishlist"
        ],
        "responses": {
          "200": {
            "description": "Wishlist collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Wishlist"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wishlist"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wishlist"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wishlist"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wishlist"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wishlist"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wishlist"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Wishlist resources.",
        "description": "Retrieves the collection of Wishlist resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "user[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_wishlists_post",
        "tags": [
          "Wishlist"
        ],
        "responses": {
          "201": {
            "description": "Wishlist resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Wishlist"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wishlist"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Wishlist"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Wishlist"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Wishlist"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Wishlist"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Wishlist"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Wishlist resource.",
        "description": "Creates a Wishlist resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Wishlist resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IWishlist"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IWishlist"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IWishlist"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IWishlist"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IWishlist"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IWishlist"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IWishlist"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/wishlists/{id}": {
      "delete": {
        "operationId": "api_wishlists_id_delete",
        "tags": [
          "Wishlist"
        ],
        "responses": {
          "204": {
            "description": "Wishlist resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Wishlist resource.",
        "description": "Removes the Wishlist resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Wishlist identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      }
    },
    "/zones": {
      "get": {
        "operationId": "api_zones_get_collection",
        "tags": [
          "Zone"
        ],
        "responses": {
          "200": {
            "description": "Zone collection",
            "content": {
              "application/ld+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hydra:member": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Zone"
                      }
                    },
                    "hydra:totalItems": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "hydra:view": {
                      "type": "object",
                      "properties": {
                        "@id": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "@type": {
                          "type": "string"
                        },
                        "hydra:first": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:last": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:previous": {
                          "type": "string",
                          "format": "iri-reference"
                        },
                        "hydra:next": {
                          "type": "string",
                          "format": "iri-reference"
                        }
                      },
                      "example": {
                        "@id": "string",
                        "type": "string",
                        "hydra:first": "string",
                        "hydra:last": "string",
                        "hydra:previous": "string",
                        "hydra:next": "string"
                      }
                    },
                    "hydra:search": {
                      "type": "object",
                      "properties": {
                        "@type": {
                          "type": "string"
                        },
                        "hydra:template": {
                          "type": "string"
                        },
                        "hydra:variableRepresentation": {
                          "type": "string"
                        },
                        "hydra:mapping": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "@type": {
                                "type": "string"
                              },
                              "variable": {
                                "type": "string"
                              },
                              "property": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "required": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "hydra:member"
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                }
              },
              "text/csv": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves the collection of Zone resources.",
        "description": "Retrieves the collection of Zone resources.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The collection page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "The number of items per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 25,
              "minimum": 0,
              "maximum": 100
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "pagination",
            "in": "query",
            "description": "Enable or disable pagination",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: properties[]={propertyName}&properties[]={anotherPropertyName}&properties[{nestedPropertyParent}][]={nestedProperty}",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "id[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[id]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "order[name]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "translated",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          },
          {
            "name": "embedCustomFields",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Flag if custom fields should be embedded in the response."
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "api_zones_post",
        "tags": [
          "Zone"
        ],
        "responses": {
          "201": {
            "description": "Zone resource created",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Creates a Zone resource.",
        "description": "Creates a Zone resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Zone resource",
          "content": {
            "application/ld+json": {
              "schema": {
                "$ref": "#/components/schemas/IZone"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IZone"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/IZone"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IZone"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IZone"
              }
            },
            "text/csv": {
              "schema": {
                "$ref": "#/components/schemas/IZone"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/IZone"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    },
    "/zones/{id}": {
      "get": {
        "operationId": "api_zones_id_get",
        "tags": [
          "Zone"
        ],
        "responses": {
          "200": {
            "description": "Zone resource",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Retrieves a Zone resource.",
        "description": "Retrieves a Zone resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Zone identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "cache",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Enable caching."
          },
          {
            "name": "browserTtl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 600
            },
            "description": "Browser cache max age."
          },
          {
            "name": "ttl",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "integer",
              "default": 86400
            },
            "description": "Redis cache max age."
          }
        ],
        "deprecated": false
      },
      "delete": {
        "operationId": "api_zones_id_delete",
        "tags": [
          "Zone"
        ],
        "responses": {
          "204": {
            "description": "Zone resource deleted"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Removes the Zone resource.",
        "description": "Removes the Zone resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Zone identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "api_zones_id_patch",
        "tags": [
          "Zone"
        ],
        "responses": {
          "200": {
            "description": "Zone resource updated",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "links": {}
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error-jsonproblem"
                }
              }
            },
            "links": {}
          },
          "422": {
            "description": "An error occurred",
            "content": {
              "application/ld+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintViolation-json"
                }
              }
            },
            "links": {}
          }
        },
        "summary": "Updates the Zone resource.",
        "description": "Updates the Zone resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Zone identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Zone resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IZone"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "streetAddress": {
            "type": [
              "string",
              "null"
            ]
          },
          "country": {
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "CH",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "region": {
            "type": [
              "string",
              "null"
            ]
          },
          "locality": {
            "type": [
              "string",
              "null"
            ]
          },
          "postalCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "houseNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "buildingNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "apartmentNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "latitude": {
            "type": [
              "string",
              "null"
            ]
          },
          "longitude": {
            "type": [
              "string",
              "null"
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "ApiRequest": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "httpMethod",
          "authType",
          "url"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "httpMethod": {
            "enum": [
              "POST",
              "GET",
              "PATCH",
              "DELETE",
              "PUT"
            ],
            "type": "string"
          },
          "authType": {
            "enum": [
              "Basic",
              "Bearer",
              "None",
              "Token"
            ],
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "tokenEnvVariableName": {
            "type": [
              "string",
              "null"
            ]
          },
          "payload": {
            "type": "object",
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "response": {
            "type": "object",
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "Article": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "relatedProducts": {
            "maxItems": 10,
            "writeOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "relatedArticles": {
            "maxItems": 10,
            "writeOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "categories": {
            "writeOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "defaultCategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "onOff": {
            "type": "boolean"
          },
          "name": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "excerpt": {},
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "template": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "date",
          "name",
          "url"
        ]
      },
      "Attachment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name",
          "url"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Banner": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "slides": {
            "maxItems": 15,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BannerSlide"
            }
          },
          "position": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "url": {
            "maxLength": 255,
            "type": "string"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "template": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "Banner-GET_BANNER": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "url": {
            "maxLength": 255,
            "type": "string"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "BannerSlide": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "BarcodeScanner": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "user",
          "barcode"
        ],
        "properties": {
          "user": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "barcode": {
            "maxLength": 100,
            "type": "string"
          },
          "format": {
            "maxLength": 30,
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Carrier": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "serviceType": {
            "enum": [
              "INTERNAL",
              "PACKETA",
              "PACKETA_COURIER",
              "BALIKOBOX",
              "SPSBALIKOMAT",
              "PPL",
              "DPD",
              "SPS",
              "DPD_PICKUP_POINT",
              "OTHERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "Category": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "children": {},
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "type": {
            "enum": [
              "ARTICLE",
              "PRODUCT",
              "CUSTOM_RESOURCE"
            ],
            "type": "string"
          },
          "hasChildren": {
            "type": "boolean"
          },
          "productsOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "categoryFilters": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "productMinPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "productMaxPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "productCount": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "visible": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "googleProductCategoryId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "heurekaProductCategoryId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "excerpt": {},
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "productMinPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "productMaxPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "parentId": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "parentName": {
            "readOnly": true
          },
          "parentUrl": {
            "readOnly": true
          }
        },
        "required": [
          "type",
          "name",
          "url"
        ]
      },
      "Category-CHECK_COUPON_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {}
        }
      },
      "Category-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "type": {
            "enum": [
              "ARTICLE",
              "PRODUCT",
              "CUSTOM_RESOURCE"
            ],
            "type": "string"
          },
          "hasChildren": {
            "type": "boolean"
          },
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "productMinPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "productMaxPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "productCount": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "visible": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "googleProductCategoryId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "heurekaProductCategoryId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "excerpt": {},
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "productMinPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "productMaxPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "parentId": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "parentName": {
            "readOnly": true
          },
          "parentUrl": {
            "readOnly": true
          }
        },
        "required": [
          "type",
          "name",
          "url"
        ]
      },
      "Category-GET_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "type": {
            "enum": [
              "ARTICLE",
              "PRODUCT",
              "CUSTOM_RESOURCE"
            ],
            "type": "string"
          },
          "hasChildren": {
            "type": "boolean"
          },
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "productMinPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "productMaxPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "productCount": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "excerpt": {},
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "parentId": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "parentName": {
            "readOnly": true
          },
          "parentUrl": {
            "readOnly": true
          }
        },
        "required": [
          "type",
          "name",
          "url"
        ]
      },
      "ConstraintViolation-json": {
        "type": "object",
        "description": "Unprocessable entity",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "default": 422,
            "example": 422,
            "type": "integer"
          },
          "constraintViolationList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "propertyPath": {
                  "type": "string",
                  "description": "The property path of the violation"
                },
                "message": {
                  "type": "string",
                  "description": "The message associated with the violation"
                }
              }
            }
          },
          "detail": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "instance": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Coupon": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "discountedValue",
          "count",
          "name",
          "code"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "PERCENTAGE",
              "VALUE"
            ],
            "type": "string"
          },
          "discountedValue": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          },
          "used": {
            "readOnly": true,
            "type": "integer"
          },
          "productsCount": {
            "minimum": 1,
            "type": [
              "integer",
              "null"
            ]
          },
          "dedication": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "categories": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "onOff": {
            "type": "boolean"
          },
          "code": {
            "maxLength": 16,
            "type": "string"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "Coupon-CHECK_COUPON_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "discountedValue"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "PERCENTAGE",
              "VALUE"
            ],
            "type": "string"
          },
          "discountedValue": {
            "type": "string"
          },
          "productsCount": {
            "minimum": 1,
            "type": [
              "integer",
              "null"
            ]
          },
          "categories": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category-CHECK_COUPON_OUTPUT"
            }
          }
        }
      },
      "Coupon-FIRST_COUPON_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "CustomField": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "ownerResource",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "STRING",
              "TEXT",
              "NUMBER",
              "BOOLEAN",
              "DATE",
              "DATETIME",
              "WYSIWYG",
              "ARTICLE_IRI",
              "WEB_PAGE_IRI",
              "PRODUCT_IRI",
              "PRODUCT_VARIANT_IRI",
              "USER_IRI",
              "CATEGORY_IRI",
              "REVIEW_IRI",
              "CUSTOM_RESOURCE_IRI",
              "FILE_IRI",
              "URL",
              "IMAGE_URL",
              "JSON_STRING"
            ],
            "type": "string"
          },
          "value": {},
          "ownerResource": {
            "enum": [
              "WEB_PAGE",
              "ARTICLE",
              "PRODUCT",
              "PRODUCT_VARIANT",
              "USER",
              "BANNER_SLIDE",
              "CATEGORY",
              "CUSTOM_RESOURCE",
              "REVIEW",
              "ORDER",
              "USER_GROUP",
              "ENQUIRY",
              "PICK_UP_POINT"
            ],
            "type": "string"
          },
          "ownerId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomField-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "ownerResource",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "STRING",
              "TEXT",
              "NUMBER",
              "BOOLEAN",
              "DATE",
              "DATETIME",
              "WYSIWYG",
              "ARTICLE_IRI",
              "WEB_PAGE_IRI",
              "PRODUCT_IRI",
              "PRODUCT_VARIANT_IRI",
              "USER_IRI",
              "CATEGORY_IRI",
              "REVIEW_IRI",
              "CUSTOM_RESOURCE_IRI",
              "FILE_IRI",
              "URL",
              "IMAGE_URL",
              "JSON_STRING"
            ],
            "type": "string"
          },
          "value": {},
          "ownerResource": {
            "enum": [
              "WEB_PAGE",
              "ARTICLE",
              "PRODUCT",
              "PRODUCT_VARIANT",
              "USER",
              "BANNER_SLIDE",
              "CATEGORY",
              "CUSTOM_RESOURCE",
              "REVIEW",
              "ORDER",
              "USER_GROUP",
              "ENQUIRY",
              "PICK_UP_POINT"
            ],
            "type": "string"
          },
          "ownerId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomField-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "ownerResource",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "STRING",
              "TEXT",
              "NUMBER",
              "BOOLEAN",
              "DATE",
              "DATETIME",
              "WYSIWYG",
              "ARTICLE_IRI",
              "WEB_PAGE_IRI",
              "PRODUCT_IRI",
              "PRODUCT_VARIANT_IRI",
              "USER_IRI",
              "CATEGORY_IRI",
              "REVIEW_IRI",
              "CUSTOM_RESOURCE_IRI",
              "FILE_IRI",
              "URL",
              "IMAGE_URL",
              "JSON_STRING"
            ],
            "type": "string"
          },
          "value": {},
          "ownerResource": {
            "enum": [
              "WEB_PAGE",
              "ARTICLE",
              "PRODUCT",
              "PRODUCT_VARIANT",
              "USER",
              "BANNER_SLIDE",
              "CATEGORY",
              "CUSTOM_RESOURCE",
              "REVIEW",
              "ORDER",
              "USER_GROUP",
              "ENQUIRY",
              "PICK_UP_POINT"
            ],
            "type": "string"
          },
          "ownerId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "url",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "INFO",
              "VARIANT",
              "USER"
            ],
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomParameterItem"
            }
          },
          "url": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "CustomParameter-GET_PARAMETERS": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "INFO",
              "VARIANT",
              "USER"
            ],
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PARAMETERS"
              },
              {
                "type": "null"
              }
            ]
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomParameter-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "url",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "INFO",
              "VARIANT",
              "USER"
            ],
            "type": "string"
          },
          "url": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "CustomParameter-GET_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "url",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "INFO",
              "VARIANT",
              "USER"
            ],
            "type": "string"
          },
          "url": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomParameter-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "url",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "INFO",
              "VARIANT",
              "USER"
            ],
            "type": "string"
          },
          "url": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_VARIANT"
              },
              {
                "type": "null"
              }
            ]
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "CustomParameterItem": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value",
          "parameter",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "pattern": "^(.*[a-zA-Z0-9].*)$",
            "maxLength": 64,
            "type": "string"
          },
          "parameter": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomParameterItem-GET_PARAMETERS": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "pattern": "^(.*[a-zA-Z0-9].*)$",
            "maxLength": 64,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PARAMETERS"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomParameterItem-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "pattern": "^(.*[a-zA-Z0-9].*)$",
            "maxLength": 64,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomParameterItem-GET_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "pattern": "^(.*[a-zA-Z0-9].*)$",
            "maxLength": 64,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomParameterItem-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "pattern": "^(.*[a-zA-Z0-9].*)$",
            "maxLength": 64,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_VARIANT"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "CustomResource": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "categories": {
            "maxItems": 20,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "defaultCategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "Discount": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "discountedValueType",
          "discountedValue",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "GLOBAL",
              "CATEGORY",
              "PRODUCT"
            ],
            "type": "string"
          },
          "discountedValueType": {
            "enum": [
              "PERCENTAGE",
              "VALUE"
            ],
            "type": "string"
          },
          "discountedValue": {
            "type": "string"
          },
          "categories": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "products": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          }
        }
      },
      "Dpd": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "order"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "order": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "response": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Email": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "messageId": {
            "type": [
              "string",
              "null"
            ]
          },
          "sender": {
            "$ref": "#/components/schemas/EmailContact"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailContact"
            }
          },
          "ccs": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/EmailContact"
            }
          },
          "bccs": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/EmailContact"
            }
          },
          "message": {
            "readOnly": true,
            "type": "string"
          },
          "subject": {
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "FAILED",
              "SUCCESS"
            ],
            "readOnly": true,
            "default": "FAILED",
            "example": "FAILED",
            "type": "string"
          },
          "templateName": {
            "enum": [
              "COMMON_EMAIL",
              "FORGOT_PASSWORD",
              "ORDER_PAYMENT_PENDING",
              "ORDER_PAYMENT_FAILED",
              "ORDER_PAID",
              "ORDER_CANCELED",
              "ORDER_REFUNDED",
              "PROCESSING_ORDER",
              "NEW_ORDER",
              "ORDER_COMPLETED",
              "ORDER_READY_FOR_PICKED_UP",
              "ABANDONED_CART_ORDER",
              "ORDER_SHIPPED",
              "REGISTRATION",
              "MIN_STOCK_COUNT",
              "NAME_DAY_COUPON",
              "FIRST_ORDER",
              "USER_AWAITING_APPROVE",
              "USER_APPROVED",
              "NEW_ENQUIRY",
              "PROCESSING_ENQUIRY",
              "ENQUIRY_COMPLETED",
              "ENQUIRY_CANCELED",
              "SUBSCRIPTION_END_14_DAYS",
              "SUBSCRIPTION_END_7_DAYS",
              "SUBSCRIPTION_END_TODAY",
              "SUBSCRIPTION_ENDED_BEFORE_7_DAYS",
              "SUBSCRIPTION_ENDED",
              "PRODUCT_ORDER_REVIEW"
            ],
            "type": "string"
          },
          "placeholders": {
            "writeOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Placeholder"
            }
          },
          "attachments": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "enquiry": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        },
        "required": [
          "sender",
          "recipients",
          "status",
          "templateName"
        ]
      },
      "EmailContact": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "EmailTemplate": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "message",
          "subject",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "message": {},
          "subject": {},
          "name": {
            "enum": [
              "COMMON_EMAIL",
              "FORGOT_PASSWORD",
              "ORDER_PAYMENT_PENDING",
              "ORDER_PAYMENT_FAILED",
              "ORDER_PAID",
              "ORDER_CANCELED",
              "ORDER_REFUNDED",
              "PROCESSING_ORDER",
              "NEW_ORDER",
              "ORDER_COMPLETED",
              "ORDER_READY_FOR_PICKED_UP",
              "ABANDONED_CART_ORDER",
              "ORDER_SHIPPED",
              "REGISTRATION",
              "MIN_STOCK_COUNT",
              "NAME_DAY_COUPON",
              "FIRST_ORDER",
              "USER_AWAITING_APPROVE",
              "USER_APPROVED",
              "NEW_ENQUIRY",
              "PROCESSING_ENQUIRY",
              "ENQUIRY_COMPLETED",
              "ENQUIRY_CANCELED",
              "SUBSCRIPTION_END_14_DAYS",
              "SUBSCRIPTION_END_7_DAYS",
              "SUBSCRIPTION_END_TODAY",
              "SUBSCRIPTION_ENDED_BEFORE_7_DAYS",
              "SUBSCRIPTION_ENDED",
              "PRODUCT_ORDER_REVIEW"
            ],
            "readOnly": true,
            "type": "string"
          },
          "owner": {
            "type": "boolean"
          },
          "notificationEmails": {},
          "addAttachments": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "placeholders": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/PlaceholderDefinition"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          }
        }
      },
      "Enquiry": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "shop",
          "client",
          "status"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EnquiryUser"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "contactAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "enum": [
              "NEW",
              "PROCESSING",
              "CANCELLED",
              "CLOSED"
            ],
            "default": "NEW",
            "example": "NEW",
            "type": "string"
          },
          "cancelReason": {
            "enum": [
              "CUSTOMER",
              "FRAUD",
              "INVENTORY",
              "DECLINED",
              "OTHER"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "cancelDescription": {
            "type": [
              "string",
              "null"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "cancelledAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "closedAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "currency": {
            "enum": [
              "EUR",
              "USD",
              "CZK",
              "HUF",
              "PLN",
              "BGN",
              "DKK",
              "RON",
              "SEK"
            ],
            "readOnly": true,
            "default": "EUR",
            "example": "EUR",
            "type": "string"
          },
          "items": {
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnquiryItem"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "subTotalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "subTotalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "EnquiryItem": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "item",
          "product",
          "category",
          "quantity"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "item": {
            "pattern": "^(.*(^/(?:products|product_variants)/\\d+$).*)$",
            "type": "string",
            "format": "iri-reference",
            "example": [
              "https://example.com/"
            ]
          },
          "product": {
            "readOnly": true,
            "type": "object",
            "example": {
              "0": "loyaltyPoints",
              "1": "loyaltyPointsPrice",
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "variantsCount": "integer",
              "productSet": "boolean",
              "status": "string",
              "stockCount": "integer",
              "availability": "string",
              "unit": "string",
              "sku": "string",
              "weight": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "minVariantPrice": "string",
              "minVariantPriceWithTax": "string",
              "referenceId": "string",
              "referenceData": [
                "string"
              ],
              "relatedProducts": {
                "@id": "/products/2",
                "id": "integer",
                "name": "string",
                "image": "string",
                "url": "string",
                "urls": [
                  "string"
                ],
                "price": "string",
                "tax": "string",
                "priceWithTax": "string",
                "minVariantPrice": "string",
                "minVariantPriceWithTax": "string"
              }
            }
          },
          "productVariant": {
            "readOnly": true,
            "type": "object",
            "example": {
              "0": "loyaltyPoints",
              "1": "loyaltyPointsPrice",
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "status": "string",
              "stockCount": "integer",
              "availability": "string",
              "unit": "string",
              "sku": "string",
              "weight": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "referenceId": "string",
              "referenceData": [
                "string"
              ],
              "parameters": {
                "customParameter": {
                  "@id": "string",
                  "id": "integer",
                  "url": "string",
                  "urls": [
                    "string"
                  ],
                  "name": "string"
                },
                "customParameterItem": {
                  "value": "string",
                  "name": "string"
                }
              }
            }
          },
          "category": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "type": "string",
              "productCount": "string",
              "productMinPrice": "string"
            }
          },
          "producer": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ]
            }
          },
          "productConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnquiryItemProductConfiguration"
            }
          },
          "quantity": {
            "minimum": 1,
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "price": {
            "type": "string"
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "type": "string"
          },
          "totalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithConfigurationAndTax": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithConfiguration": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "EnquiryItemProductConfiguration": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "productConfiguration",
          "itemConfiguration",
          "quantity"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "productConfiguration": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "quantityAble": "string"
            }
          },
          "itemConfiguration": {
            "pattern": "^(/(?:product_configurations)/\\d+)$",
            "type": "string",
            "format": "iri-reference",
            "example": [
              "https://example.com/"
            ]
          },
          "quantity": {
            "type": "integer"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "EnquiryStatusChange": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "statusFrom",
          "statusTo",
          "enquiry"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "statusFrom": {
            "enum": [
              "NEW",
              "PROCESSING",
              "CANCELLED",
              "CLOSED"
            ],
            "type": "string"
          },
          "statusTo": {
            "enum": [
              "NEW",
              "PROCESSING",
              "CANCELLED",
              "CLOSED"
            ],
            "type": "string"
          },
          "enquiry": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "EnquiryUser": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email",
          "familyName",
          "givenName"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {}
        }
      },
      "Enum": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EnvironmentVariable": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "maxLength": 64,
            "type": "string"
          },
          "value": {
            "maxLength": 2048,
            "type": "string"
          },
          "editable": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "secret": {
            "type": "boolean"
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "Error-jsonproblem": {
        "type": "object",
        "description": "A representation of common errors.",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "readOnly": true,
            "description": "A short, human-readable summary of the problem.",
            "type": [
              "string",
              "null"
            ]
          },
          "detail": {
            "readOnly": true,
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "type": "number",
            "examples": [
              404
            ],
            "default": 400
          },
          "instance": {
            "readOnly": true,
            "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "readOnly": true,
            "description": "A URI reference that identifies the problem type",
            "type": "string"
          }
        }
      },
      "Establishment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "shippingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "billingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "manager": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "loyaltyPoints": {
            "type": [
              "integer",
              "null"
            ]
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Export": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "format"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "GOOGLE_MERCHANT_CENTER",
              "FACEBOOK_ADS",
              "HEUREKA",
              "LUIGISBOX_PRODUCTS",
              "LUIGISBOX_ARTICLES",
              "LUIGISBOX_CATEGORIES",
              "LUIGISBOX_PRODUCERS",
              "PRODUCTS_WITH_VARIANTS_PRICES"
            ],
            "type": "string"
          },
          "format": {
            "enum": [
              "XML",
              "XLSX",
              "CSV"
            ],
            "type": "string"
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "fromDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "toDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "File": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "label": {},
          "resource": {
            "maxLength": 255,
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "fileAttribute": {
            "enum": [
              "FILES",
              "FILE"
            ],
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "File-GET_PARAMETERS": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "label": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "File-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "label": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "File-GET_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "label": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "File-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "label": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "Google": {
        "type": "object",
        "description": "Google Product Category for GMC feed.",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "fullName": {
            "type": [
              "string",
              "null"
            ]
          },
          "parentId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Heureka": {
        "type": "object",
        "description": "Heureka Product Category for GMC feed.",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "fullName": {
            "type": [
              "string",
              "null"
            ]
          },
          "parentId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IAddress": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "streetAddress": {
            "type": [
              "string",
              "null"
            ]
          },
          "country": {
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "CH",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "region": {
            "type": [
              "string",
              "null"
            ]
          },
          "locality": {
            "type": [
              "string",
              "null"
            ]
          },
          "postalCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "houseNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "buildingNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "apartmentNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "latitude": {
            "type": [
              "string",
              "null"
            ]
          },
          "longitude": {
            "type": [
              "string",
              "null"
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "IAddress-UPDATE_ENQUIRY": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "streetAddress": {
            "type": [
              "string",
              "null"
            ]
          },
          "country": {
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "CH",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "region": {
            "type": [
              "string",
              "null"
            ]
          },
          "locality": {
            "type": [
              "string",
              "null"
            ]
          },
          "postalCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "houseNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "buildingNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "apartmentNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "latitude": {
            "type": [
              "string",
              "null"
            ]
          },
          "longitude": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "IAddress-UPDATE_ORDER": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "streetAddress": {
            "type": [
              "string",
              "null"
            ]
          },
          "country": {
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "CH",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "region": {
            "type": [
              "string",
              "null"
            ]
          },
          "locality": {
            "type": [
              "string",
              "null"
            ]
          },
          "postalCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "houseNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "buildingNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "apartmentNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": [
              "string",
              "null"
            ]
          },
          "latitude": {
            "type": [
              "string",
              "null"
            ]
          },
          "longitude": {
            "type": [
              "string",
              "null"
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "IApiRequest": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "httpMethod",
          "authType",
          "url"
        ],
        "properties": {
          "httpMethod": {
            "enum": [
              "POST",
              "GET",
              "PATCH",
              "DELETE",
              "PUT"
            ],
            "type": "string"
          },
          "authType": {
            "enum": [
              "Basic",
              "Bearer",
              "None",
              "Token"
            ],
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "tokenEnvVariableName": {
            "type": [
              "string",
              "null"
            ]
          },
          "payload": {
            "type": "object",
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "response": {
            "type": "object",
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "IArticle": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "relatedProducts": {
            "maxItems": 10,
            "writeOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "relatedArticles": {
            "maxItems": 10,
            "writeOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "categories": {
            "writeOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "defaultCategory": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "onOff": {
            "type": "boolean"
          },
          "name": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "excerpt": {},
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "template": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "date",
          "name",
          "url"
        ]
      },
      "IAttachment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name",
          "url"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "IBanner": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "slides": {
            "maxItems": 15,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "position": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "url": {
            "maxLength": 255,
            "type": "string"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "template": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "IBannerSlide": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "IBarcodeScanner": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "user",
          "barcode"
        ],
        "properties": {
          "user": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "barcode": {
            "maxLength": 100,
            "type": "string"
          },
          "format": {
            "maxLength": 30,
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "ICarrier": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "serviceType": {
            "enum": [
              "INTERNAL",
              "PACKETA",
              "PACKETA_COURIER",
              "BALIKOBOX",
              "SPSBALIKOMAT",
              "PPL",
              "DPD",
              "SPS",
              "DPD_PICKUP_POINT",
              "OTHERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "ICategory": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "children": {},
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "type": {
            "enum": [
              "ARTICLE",
              "PRODUCT",
              "CUSTOM_RESOURCE"
            ],
            "type": "string"
          },
          "hasChildren": {
            "type": "boolean"
          },
          "productsOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "categoryFilters": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "productMinPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "productMaxPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "productCount": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "visible": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "googleProductCategoryId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "heurekaProductCategoryId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "onOff": {
            "type": "boolean"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "excerpt": {},
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "productMinPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "productMaxPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "parentId": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "parentName": {
            "readOnly": true
          },
          "parentUrl": {
            "readOnly": true
          }
        },
        "required": [
          "type",
          "name",
          "url"
        ]
      },
      "ICoupon": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "discountedValue",
          "count",
          "name",
          "code"
        ],
        "properties": {
          "type": {
            "enum": [
              "PERCENTAGE",
              "VALUE"
            ],
            "type": "string"
          },
          "discountedValue": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          },
          "used": {
            "readOnly": true,
            "type": "integer"
          },
          "productsCount": {
            "minimum": 1,
            "type": [
              "integer",
              "null"
            ]
          },
          "dedication": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "categories": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time"
          },
          "toDate": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "onOff": {
            "type": "boolean"
          },
          "code": {
            "maxLength": 16,
            "type": "string"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "ICoupon-CHECK_COUPON_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "maxLength": 16,
            "type": "string"
          }
        }
      },
      "ICoupon-FIRST_COUPON_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "ICustomField": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "ownerResource",
          "name"
        ],
        "properties": {
          "type": {
            "enum": [
              "STRING",
              "TEXT",
              "NUMBER",
              "BOOLEAN",
              "DATE",
              "DATETIME",
              "WYSIWYG",
              "ARTICLE_IRI",
              "WEB_PAGE_IRI",
              "PRODUCT_IRI",
              "PRODUCT_VARIANT_IRI",
              "USER_IRI",
              "CATEGORY_IRI",
              "REVIEW_IRI",
              "CUSTOM_RESOURCE_IRI",
              "FILE_IRI",
              "URL",
              "IMAGE_URL",
              "JSON_STRING"
            ],
            "type": "string"
          },
          "value": {},
          "ownerResource": {
            "enum": [
              "WEB_PAGE",
              "ARTICLE",
              "PRODUCT",
              "PRODUCT_VARIANT",
              "USER",
              "BANNER_SLIDE",
              "CATEGORY",
              "CUSTOM_RESOURCE",
              "REVIEW",
              "ORDER",
              "USER_GROUP",
              "ENQUIRY",
              "PICK_UP_POINT"
            ],
            "type": "string"
          },
          "ownerId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "ICustomParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "url",
          "name"
        ],
        "properties": {
          "type": {
            "enum": [
              "INFO",
              "VARIANT",
              "USER"
            ],
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "url": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "ICustomParameterItem": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value",
          "parameter",
          "name"
        ],
        "properties": {
          "value": {
            "pattern": "^(.*[a-zA-Z0-9].*)$",
            "maxLength": 64,
            "type": "string"
          },
          "parameter": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "ICustomResource": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "categories": {
            "maxItems": 20,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "defaultCategory": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "IDiscount": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "discountedValueType",
          "discountedValue",
          "name"
        ],
        "properties": {
          "type": {
            "enum": [
              "GLOBAL",
              "CATEGORY",
              "PRODUCT"
            ],
            "type": "string"
          },
          "discountedValueType": {
            "enum": [
              "PERCENTAGE",
              "VALUE"
            ],
            "type": "string"
          },
          "discountedValue": {
            "type": "string"
          },
          "categories": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "products": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          }
        }
      },
      "IDpd": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "response": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IEmail": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "messageId": {
            "type": [
              "string",
              "null"
            ]
          },
          "sender": {
            "$ref": "#/components/schemas/IEmailContact"
          },
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEmailContact"
            }
          },
          "ccs": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/IEmailContact"
            }
          },
          "bccs": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/IEmailContact"
            }
          },
          "message": {
            "readOnly": true,
            "type": "string"
          },
          "subject": {
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "FAILED",
              "SUCCESS"
            ],
            "readOnly": true,
            "default": "FAILED",
            "example": "FAILED",
            "type": "string"
          },
          "templateName": {
            "enum": [
              "COMMON_EMAIL",
              "FORGOT_PASSWORD",
              "ORDER_PAYMENT_PENDING",
              "ORDER_PAYMENT_FAILED",
              "ORDER_PAID",
              "ORDER_CANCELED",
              "ORDER_REFUNDED",
              "PROCESSING_ORDER",
              "NEW_ORDER",
              "ORDER_COMPLETED",
              "ORDER_READY_FOR_PICKED_UP",
              "ABANDONED_CART_ORDER",
              "ORDER_SHIPPED",
              "REGISTRATION",
              "MIN_STOCK_COUNT",
              "NAME_DAY_COUPON",
              "FIRST_ORDER",
              "USER_AWAITING_APPROVE",
              "USER_APPROVED",
              "NEW_ENQUIRY",
              "PROCESSING_ENQUIRY",
              "ENQUIRY_COMPLETED",
              "ENQUIRY_CANCELED",
              "SUBSCRIPTION_END_14_DAYS",
              "SUBSCRIPTION_END_7_DAYS",
              "SUBSCRIPTION_END_TODAY",
              "SUBSCRIPTION_ENDED_BEFORE_7_DAYS",
              "SUBSCRIPTION_ENDED",
              "PRODUCT_ORDER_REVIEW"
            ],
            "type": "string"
          },
          "placeholders": {
            "writeOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/IPlaceholder"
            }
          },
          "attachments": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/IAttachment"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "enquiry": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        },
        "required": [
          "sender",
          "recipients",
          "status",
          "templateName"
        ]
      },
      "IEmail-RESEND_EMAIL_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "messageId": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "IEmailContact": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "IEmailTemplate": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "message",
          "subject",
          "name"
        ],
        "properties": {
          "message": {},
          "subject": {},
          "name": {
            "enum": [
              "COMMON_EMAIL",
              "FORGOT_PASSWORD",
              "ORDER_PAYMENT_PENDING",
              "ORDER_PAYMENT_FAILED",
              "ORDER_PAID",
              "ORDER_CANCELED",
              "ORDER_REFUNDED",
              "PROCESSING_ORDER",
              "NEW_ORDER",
              "ORDER_COMPLETED",
              "ORDER_READY_FOR_PICKED_UP",
              "ABANDONED_CART_ORDER",
              "ORDER_SHIPPED",
              "REGISTRATION",
              "MIN_STOCK_COUNT",
              "NAME_DAY_COUPON",
              "FIRST_ORDER",
              "USER_AWAITING_APPROVE",
              "USER_APPROVED",
              "NEW_ENQUIRY",
              "PROCESSING_ENQUIRY",
              "ENQUIRY_COMPLETED",
              "ENQUIRY_CANCELED",
              "SUBSCRIPTION_END_14_DAYS",
              "SUBSCRIPTION_END_7_DAYS",
              "SUBSCRIPTION_END_TODAY",
              "SUBSCRIPTION_ENDED_BEFORE_7_DAYS",
              "SUBSCRIPTION_ENDED",
              "PRODUCT_ORDER_REVIEW"
            ],
            "readOnly": true,
            "type": "string"
          },
          "owner": {
            "type": "boolean"
          },
          "notificationEmails": {},
          "addAttachments": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "placeholders": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/IPlaceholderDefinition"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          }
        }
      },
      "IEnquiry": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "shop",
          "client",
          "status"
        ],
        "properties": {
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IEnquiryUser"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "contactAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "enum": [
              "NEW",
              "PROCESSING",
              "CANCELLED",
              "CLOSED"
            ],
            "default": "NEW",
            "example": "NEW",
            "type": "string"
          },
          "cancelReason": {
            "enum": [
              "CUSTOMER",
              "FRAUD",
              "INVENTORY",
              "DECLINED",
              "OTHER"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "cancelDescription": {
            "type": [
              "string",
              "null"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "cancelledAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "closedAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "currency": {
            "enum": [
              "EUR",
              "USD",
              "CZK",
              "HUF",
              "PLN",
              "BGN",
              "DKK",
              "RON",
              "SEK"
            ],
            "readOnly": true,
            "default": "EUR",
            "example": "EUR",
            "type": "string"
          },
          "items": {
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEnquiryItem"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "subTotalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "subTotalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IEnquiry-UPDATE_ENQUIRY": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "client",
          "status"
        ],
        "properties": {
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IEnquiryUser-UPDATE_ENQUIRY"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "contactAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress-UPDATE_ENQUIRY"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "enum": [
              "NEW",
              "PROCESSING",
              "CANCELLED",
              "CLOSED"
            ],
            "default": "NEW",
            "example": "NEW",
            "type": "string"
          },
          "cancelReason": {
            "enum": [
              "CUSTOMER",
              "FRAUD",
              "INVENTORY",
              "DECLINED",
              "OTHER"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "cancelDescription": {
            "type": [
              "string",
              "null"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "IEnquiryItem": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "item",
          "product",
          "category",
          "quantity"
        ],
        "properties": {
          "item": {
            "pattern": "^(.*(^/(?:products|product_variants)/\\d+$).*)$",
            "type": "string",
            "format": "iri-reference",
            "example": [
              "https://example.com/"
            ]
          },
          "product": {
            "readOnly": true,
            "type": "object",
            "example": {
              "0": "loyaltyPoints",
              "1": "loyaltyPointsPrice",
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "variantsCount": "integer",
              "productSet": "boolean",
              "status": "string",
              "stockCount": "integer",
              "availability": "string",
              "unit": "string",
              "sku": "string",
              "weight": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "minVariantPrice": "string",
              "minVariantPriceWithTax": "string",
              "referenceId": "string",
              "referenceData": [
                "string"
              ],
              "relatedProducts": {
                "@id": "/products/2",
                "id": "integer",
                "name": "string",
                "image": "string",
                "url": "string",
                "urls": [
                  "string"
                ],
                "price": "string",
                "tax": "string",
                "priceWithTax": "string",
                "minVariantPrice": "string",
                "minVariantPriceWithTax": "string"
              }
            }
          },
          "productVariant": {
            "readOnly": true,
            "type": "object",
            "example": {
              "0": "loyaltyPoints",
              "1": "loyaltyPointsPrice",
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "status": "string",
              "stockCount": "integer",
              "availability": "string",
              "unit": "string",
              "sku": "string",
              "weight": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "referenceId": "string",
              "referenceData": [
                "string"
              ],
              "parameters": {
                "customParameter": {
                  "@id": "string",
                  "id": "integer",
                  "url": "string",
                  "urls": [
                    "string"
                  ],
                  "name": "string"
                },
                "customParameterItem": {
                  "value": "string",
                  "name": "string"
                }
              }
            }
          },
          "category": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "type": "string",
              "productCount": "string",
              "productMinPrice": "string"
            }
          },
          "producer": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ]
            }
          },
          "productConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IEnquiryItemProductConfiguration"
            }
          },
          "quantity": {
            "minimum": 1,
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "price": {
            "type": "string"
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "type": "string"
          },
          "totalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithConfigurationAndTax": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithConfiguration": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IEnquiryItemProductConfiguration": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "productConfiguration",
          "itemConfiguration",
          "quantity"
        ],
        "properties": {
          "productConfiguration": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "quantityAble": "string"
            }
          },
          "itemConfiguration": {
            "pattern": "^(/(?:product_configurations)/\\d+)$",
            "type": "string",
            "format": "iri-reference",
            "example": [
              "https://example.com/"
            ]
          },
          "quantity": {
            "type": "integer"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IEnquiryUser": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email",
          "familyName",
          "givenName"
        ],
        "properties": {
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {}
        }
      },
      "IEnquiryUser-UPDATE_ENQUIRY": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email",
          "familyName",
          "givenName"
        ],
        "properties": {
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {}
        }
      },
      "IEnvironmentVariable": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "maxLength": 64,
            "type": "string"
          },
          "value": {
            "maxLength": 2048,
            "type": "string"
          },
          "editable": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "secret": {
            "type": "boolean"
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "IEstablishment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "shippingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "billingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "manager": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "loyaltyPoints": {
            "type": [
              "integer",
              "null"
            ]
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IExport": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "format"
        ],
        "properties": {
          "type": {
            "enum": [
              "GOOGLE_MERCHANT_CENTER",
              "FACEBOOK_ADS",
              "HEUREKA",
              "LUIGISBOX_PRODUCTS",
              "LUIGISBOX_ARTICLES",
              "LUIGISBOX_CATEGORIES",
              "LUIGISBOX_PRODUCERS",
              "PRODUCTS_WITH_VARIANTS_PRICES"
            ],
            "type": "string"
          },
          "format": {
            "enum": [
              "XML",
              "XLSX",
              "CSV"
            ],
            "type": "string"
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "fromDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "toDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IFile": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "mimeType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "label": {},
          "resource": {
            "maxLength": 255,
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "fileAttribute": {
            "enum": [
              "FILES",
              "FILE"
            ],
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IFile-FILE_PATCH_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "label": {}
        }
      },
      "IImport": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "file"
        ],
        "properties": {
          "type": {
            "enum": [
              "UPDATE_PRICES_FROM_CSV"
            ],
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "messages": {
            "readOnly": true,
            "default": {
              "info": [],
              "warning": []
            },
            "example": {
              "info": [],
              "warning": []
            },
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "IJsonBlock": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name",
          "type",
          "jsonBlock"
        ],
        "properties": {
          "name": {
            "maxLength": 64,
            "type": "string"
          },
          "type": {
            "enum": [
              "CUSTOM",
              "INTERNAL"
            ],
            "type": "string"
          },
          "jsonBlock": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "ILogin-LOGIN_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ILogstash": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "level",
          "message"
        ],
        "properties": {
          "level": {
            "enum": [
              "NOTICE",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "INavigation": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "menu": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "name": "string",
                "url": "string",
                "items": [
                  "string"
                ],
                "metaInformation": [
                  "string"
                ]
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "onOff": {
            "type": "boolean"
          },
          "url": {
            "maxLength": 255,
            "type": "string"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "IOrder": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "number": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IOrderUser"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "contactPerson": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IOrderUser"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "enum": [
              "DRAFT",
              "SAVED",
              "NEW",
              "EXPORT_FAILED",
              "PROCESSING",
              "PAYMENT_PENDING",
              "PAYMENT_FAILED",
              "PAYMENT_REFUNDED",
              "PAID",
              "IN_PRODUCTION",
              "SHIPPED",
              "READY_FOR_PICKUP",
              "CANCELLED",
              "CLOSED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "cancelReason": {
            "enum": [
              "CUSTOMER",
              "FRAUD",
              "INVENTORY",
              "DECLINED",
              "OTHER"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "cancelDescription": {
            "type": [
              "string",
              "null"
            ]
          },
          "postNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "cancelledAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "consents": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "financialStatus": {
            "enum": [
              "PENDING",
              "AUTHORIZED",
              "PARTIALLY_PAID",
              "PAID",
              "PARTIALLY_REFUNDED",
              "REFUNDED",
              "VOIDED",
              "FAILED"
            ],
            "default": "PENDING",
            "example": "PENDING",
            "type": [
              "string",
              "null"
            ]
          },
          "paymentType": {
            "enum": [
              "COD",
              "CASH",
              "GO_PAY",
              "GP_WEB_PAY",
              "24_PAY",
              "TATRA_PAY",
              "BESTERON",
              "TATRA_PAY_CARD_PAY",
              "TATRA_PAY_BANK_TRANSFER",
              "TATRA_PAY_PAY_LATER",
              "STRIPE",
              "BANK_TRANSFER",
              "PAY_PAL",
              "TRUSTPAY"
            ],
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "closedAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "currency": {
            "enum": [
              "EUR",
              "USD",
              "CZK",
              "HUF",
              "PLN",
              "BGN",
              "DKK",
              "RON",
              "SEK"
            ],
            "readOnly": true,
            "default": "EUR",
            "example": "EUR",
            "type": "string"
          },
          "coupon": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "couponCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "payBySquare": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "discount": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "shipping": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "carrier": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "serviceType": "string",
              "file": "string",
              "referenceId": "string",
              "referenceData": "string"
            }
          },
          "payment": {},
          "zone": {},
          "priceLevel": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "type": "string",
              "amountFrom": "string",
              "amountTo": "string"
            }
          },
          "pickUpPoint": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "carrierPrice": {
            "readOnly": true,
            "type": "string"
          },
          "paymentPrice": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFee": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFeeWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "carrierPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "paymentPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "shippingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "billingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "hash": {
            "readOnly": true,
            "type": "string"
          },
          "sessionId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "items": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOrderItem"
            }
          },
          "dryRun": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "validateAvailability": {
            "type": "boolean"
          },
          "salesReferent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "establishment": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "width": {
            "type": [
              "integer",
              "null"
            ]
          },
          "height": {
            "type": [
              "integer",
              "null"
            ]
          },
          "newAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "depth": {
            "type": [
              "integer",
              "null"
            ]
          },
          "invoice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "subTotalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "subTotalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalWeight": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalLoyaltyPointsPrice": {
            "readOnly": true,
            "type": "integer"
          },
          "totalLoyaltyPoints": {
            "readOnly": true,
            "type": "integer"
          },
          "shippingPrice": {
            "readOnly": true,
            "type": "string"
          },
          "shippingPriceWithTax": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "shop",
          "status",
          "hash"
        ]
      },
      "IOrder-UPDATE_ORDER": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IOrderUser-UPDATE_ORDER"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "contactPerson": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IOrderUser-UPDATE_ORDER"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "enum": [
              "DRAFT",
              "SAVED",
              "NEW",
              "EXPORT_FAILED",
              "PROCESSING",
              "PAYMENT_PENDING",
              "PAYMENT_FAILED",
              "PAYMENT_REFUNDED",
              "PAID",
              "IN_PRODUCTION",
              "SHIPPED",
              "READY_FOR_PICKUP",
              "CANCELLED",
              "CLOSED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "cancelReason": {
            "enum": [
              "CUSTOMER",
              "FRAUD",
              "INVENTORY",
              "DECLINED",
              "OTHER"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "cancelDescription": {
            "type": [
              "string",
              "null"
            ]
          },
          "postNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "financialStatus": {
            "enum": [
              "PENDING",
              "AUTHORIZED",
              "PARTIALLY_PAID",
              "PAID",
              "PARTIALLY_REFUNDED",
              "REFUNDED",
              "VOIDED",
              "FAILED"
            ],
            "default": "PENDING",
            "example": "PENDING",
            "type": [
              "string",
              "null"
            ]
          },
          "shippingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress-UPDATE_ORDER"
              },
              {
                "type": "null"
              }
            ]
          },
          "billingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress-UPDATE_ORDER"
              },
              {
                "type": "null"
              }
            ]
          },
          "salesReferent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IUser-UPDATE_ORDER"
              },
              {
                "type": "null"
              }
            ]
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "width": {
            "type": [
              "integer",
              "null"
            ]
          },
          "height": {
            "type": [
              "integer",
              "null"
            ]
          },
          "depth": {
            "type": [
              "integer",
              "null"
            ]
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "IOrderItem": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "item",
          "product",
          "category",
          "quantity"
        ],
        "properties": {
          "item": {
            "pattern": "^(.*(^/(?:products|product_variants)/\\d+$).*)$",
            "type": "string",
            "format": "iri-reference",
            "example": [
              "https://example.com/"
            ]
          },
          "product": {
            "readOnly": true,
            "type": "object",
            "example": {
              "0": "loyaltyPoints",
              "1": "loyaltyPointsPrice",
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "variantsCount": "integer",
              "productSet": "boolean",
              "status": "string",
              "stockCount": "integer",
              "availability": "string",
              "unit": "string",
              "sku": "string",
              "weight": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "minVariantPrice": "string",
              "minVariantPriceWithTax": "string",
              "referenceId": "string",
              "referenceData": [
                "string"
              ],
              "relatedProducts": {
                "@id": "/products/2",
                "id": "integer",
                "name": "string",
                "image": "string",
                "url": "string",
                "urls": [
                  "string"
                ],
                "price": "string",
                "tax": "string",
                "priceWithTax": "string",
                "minVariantPrice": "string",
                "minVariantPriceWithTax": "string",
                "stockCount": "integer",
                "variantsCount": "integer",
                "availability": "string"
              }
            }
          },
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "productVariant": {
            "readOnly": true,
            "type": "object",
            "example": {
              "0": "loyaltyPoints",
              "1": "loyaltyPointsPrice",
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "status": "string",
              "stockCount": "integer",
              "availability": "string",
              "unit": "string",
              "sku": "string",
              "weight": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "referenceId": "string",
              "referenceData": [
                "string"
              ],
              "parameters": {
                "customParameter": {
                  "@id": "string",
                  "id": "integer",
                  "url": "string",
                  "urls": [
                    "string"
                  ],
                  "name": "string"
                },
                "customParameterItem": {
                  "value": "string",
                  "name": "string"
                }
              }
            }
          },
          "category": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "type": "string",
              "productCount": "string",
              "productMinPrice": "string"
            }
          },
          "producer": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ]
            }
          },
          "productConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IOrderItemProductConfiguration"
            }
          },
          "quantity": {
            "minimum": 1,
            "type": "integer"
          },
          "coupon": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "usedLoyaltyPoints": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "price": {
            "type": "string"
          },
          "weight": {
            "readOnly": true,
            "type": "string"
          },
          "totalWeight": {
            "readOnly": true,
            "type": "string"
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "type": "string"
          },
          "totalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithConfigurationAndTax": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithConfiguration": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalLoyaltyPoints": {
            "readOnly": true,
            "type": "integer"
          },
          "totalLoyaltyPointsPrice": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "IOrderItem-UPDATE_ORDER_ITEM": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IOrderItemProductConfiguration": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "productConfiguration",
          "itemConfiguration",
          "quantity"
        ],
        "properties": {
          "productConfiguration": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "quantityAble": "string"
            }
          },
          "itemConfiguration": {
            "pattern": "^(/(?:product_configurations)/\\d+)$",
            "type": "string",
            "format": "iri-reference",
            "example": [
              "https://example.com/"
            ]
          },
          "quantity": {
            "type": "integer"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IOrderUser": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {}
        }
      },
      "IOrderUser-UPDATE_ORDER": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {}
        }
      },
      "IPacketa": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "response": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IPayment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "paymentAttributes": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "type": {
            "enum": [
              "COD",
              "CASH",
              "GO_PAY",
              "GP_WEB_PAY",
              "24_PAY",
              "TATRA_PAY",
              "BESTERON",
              "TATRA_PAY_CARD_PAY",
              "TATRA_PAY_BANK_TRANSFER",
              "TATRA_PAY_PAY_LATER",
              "STRIPE",
              "BANK_TRANSFER",
              "PAY_PAL",
              "TRUSTPAY"
            ],
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "type",
          "name"
        ]
      },
      "IPdf": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "fromDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "toDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "name": {
            "maxLength": 64,
            "type": "string"
          },
          "resource": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ]
          },
          "html": {
            "type": [
              "string",
              "null"
            ]
          },
          "payBySquare": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "templateName": {
            "enum": [
              "CUSTOM_HTML",
              "GIFT_VOUCHER",
              "INVOICE"
            ],
            "writeOnly": true,
            "type": "string"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "templateName"
        ]
      },
      "IPickUpPoint": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "carrier",
          "name"
        ],
        "properties": {
          "carrier": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "IPlaceholder": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "value": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "IPlaceholderDefinition": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {}
        }
      },
      "IPriceDefinition": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "identifier",
          "currency"
        ],
        "properties": {
          "identifier": {
            "pattern": "^(.*[a-zA-Z0-9].*)$",
            "maxLength": 8,
            "type": "string"
          },
          "currency": {
            "enum": [
              "EUR",
              "USD",
              "CZK",
              "HUF",
              "PLN",
              "BGN",
              "DKK",
              "RON",
              "SEK"
            ],
            "type": "string"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "IPriceDefinition-PRICE_DEFINITION": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "currency"
        ],
        "properties": {
          "currency": {
            "enum": [
              "EUR",
              "USD",
              "CZK",
              "HUF",
              "PLN",
              "BGN",
              "DKK",
              "RON",
              "SEK"
            ],
            "type": "string"
          }
        }
      },
      "IPriceLevel": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "carrierPrices",
          "paymentPrices",
          "carrier",
          "amountFrom",
          "amountTo",
          "type"
        ],
        "properties": {
          "carrierPrices": {
            "minItems": 1,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "paymentPrices": {
            "minItems": 1,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "carrier": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "payments": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "zones": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "amountFrom": {
            "type": "string"
          },
          "amountTo": {
            "type": "string"
          },
          "type": {
            "enum": [
              "WEIGHT",
              "PRICE"
            ],
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "carrierPrice": {
            "readOnly": true,
            "type": "string"
          },
          "carrierPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "paymentPrice": {
            "readOnly": true,
            "type": "string"
          },
          "paymentPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IProducer": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "visible": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "onOff": {
            "type": "boolean"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "excerpt": {},
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "IProduct": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "defaultVariant": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "variantParameterGroups": {
            "type": [
              "string",
              "null"
            ]
          },
          "relatedProducts": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "relatedArticles": {
            "maxItems": 10,
            "writeOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "informationParameters": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "minVariantPrices": {
            "minItems": 1,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "variantsCount": {
            "readOnly": true,
            "type": "integer"
          },
          "defaultCategory": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "producer": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "categories": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "configurations": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "productSet": {
            "type": "boolean"
          },
          "quantityPrices": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "status": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "faq": {},
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "originalPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "minStockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "unit": {
            "enum": [
              "HOURS",
              "MINUTES",
              "GRAMS",
              "KILOGRAMS",
              "COUNT",
              "METERS",
              "CENTIMETERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "ean": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "launchDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "loyaltyPointsEarned": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "userPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "loyaltyPointsPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "minVariantPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "minVariantPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "loyaltyPoints": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "loyaltyPointsPrice": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        },
        "required": [
          "defaultCategory",
          "categories",
          "status",
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ]
      },
      "IProductConfiguration": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "quantityAble": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "taxLevel",
          "prices"
        ]
      },
      "IProductInSet": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "quantity",
          "set"
        ],
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "set": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "productVariant": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "IProductInSet-UPDATE_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "quantity"
        ],
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "productVariant": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "IProductInformationParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product",
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "product": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameterItem": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameter": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "IProductQuantityPrice": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product",
          "taxLevel",
          "fromQuantity",
          "toQuantity",
          "prices"
        ],
        "properties": {
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "readOnly": true,
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "fromQuantity": {
            "type": "integer"
          },
          "toQuantity": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IProductVariant": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product",
          "status",
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ],
        "properties": {
          "product": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "parameters": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "informationParameters": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "configurations": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "quantityPrices": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "status": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "faq": {},
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "originalPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "minStockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "unit": {
            "enum": [
              "HOURS",
              "MINUTES",
              "GRAMS",
              "KILOGRAMS",
              "COUNT",
              "METERS",
              "CENTIMETERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "ean": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "launchDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "loyaltyPointsEarned": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "userPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "loyaltyPointsPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "productId": {
            "readOnly": true,
            "type": "integer"
          },
          "productIri": {
            "readOnly": true,
            "type": "string"
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "loyaltyPoints": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "loyaltyPointsPrice": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        }
      },
      "IProductVariant.ProductVariantInput": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "parameters",
          "product"
        ],
        "properties": {
          "parameters": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IProductVariantCustomParametersInput"
            }
          },
          "product": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "configurations": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          }
        }
      },
      "IProductVariantCustomParametersInput": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "parameter",
          "parameterItems"
        ],
        "properties": {
          "parameter": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "parameterItems": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          }
        }
      },
      "IProductVariantInformationParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "productVariant",
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "productVariant": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameterItem": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameter": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "IProductVariantQuantityPrice": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "productVariant",
          "taxLevel",
          "fromQuantity",
          "toQuantity",
          "prices"
        ],
        "properties": {
          "productVariant": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "readOnly": true,
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "fromQuantity": {
            "type": "integer"
          },
          "toQuantity": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IQRCode": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "maxLength": 255,
            "type": "string"
          },
          "size": {
            "default": 300,
            "example": 300,
            "type": "integer"
          },
          "margin": {
            "default": 10,
            "example": 10,
            "type": "integer"
          },
          "label": {
            "type": [
              "string",
              "null"
            ]
          },
          "labelSize": {
            "default": 15,
            "example": 15,
            "type": "integer"
          }
        }
      },
      "IRedirect": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "fromUrl",
          "toUrl"
        ],
        "properties": {
          "fromUrl": {
            "type": "string"
          },
          "toUrl": {
            "type": "string"
          }
        }
      },
      "IRedis": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "maxLength": 64,
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "ttl": {
            "default": 86400,
            "example": 86400,
            "type": "integer"
          }
        }
      },
      "IReview": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "stars",
          "name"
        ],
        "properties": {
          "stars": {
            "enum": [
              "ONE_STAR",
              "TWO_STARS",
              "THREE_STARS",
              "FOUR_STARS",
              "FIVE_STARS"
            ],
            "type": "string"
          },
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "jobTitle": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "onOff": {
            "type": "boolean"
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "excerpt": {},
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IRole": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "permissions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "additionalPermissions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "users": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {}
        },
        "required": [
          "name"
        ]
      },
      "IShop": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "tagline": {},
          "stamp": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "url": {
            "maxLength": 255,
            "type": "string"
          },
          "redirects": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/IRedirect"
            }
          },
          "handleStock": {
            "type": "boolean"
          },
          "stockAuditTrail": {
            "type": "boolean"
          },
          "generatePayBySquare": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "defaultTax": {
            "default": "0.2300",
            "example": "0.2300",
            "type": "string"
          },
          "zeroTax": {
            "default": "0.0000",
            "example": "0.0000",
            "type": "string"
          },
          "round": {
            "minimum": 0,
            "maximum": 4,
            "type": [
              "integer",
              "null"
            ]
          },
          "lowTax": {
            "default": "0.0500",
            "example": "0.0500",
            "type": "string"
          },
          "middleTax": {
            "default": "0.1900",
            "example": "0.1900",
            "type": "string"
          },
          "highTax": {
            "default": "0.2300",
            "example": "0.2300",
            "type": "string"
          },
          "priceDefinition": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "zone": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "handlingFeePrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "handlingFeeLimits": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "heurekaShopCertificationEnabled": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "onOff": {
            "type": "boolean"
          },
          "keywords": {},
          "metaDescription": {},
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAddress"
            }
          },
          "defaultAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          },
          "bankName": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ]
          },
          "iban": {
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "bic": {
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "language": {
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "type": "string"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "handlingFeePrice": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFeePriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFeeLimit": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFeeLimitWithTax": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "url",
          "defaultTax",
          "zeroTax",
          "lowTax",
          "middleTax",
          "highTax",
          "priceDefinition",
          "name",
          "email",
          "language"
        ]
      },
      "IShop-REGISTRATION_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "ISms": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "messageId": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "sender": {
            "$ref": "#/components/schemas/ISmsContact"
          },
          "recipient": {
            "$ref": "#/components/schemas/ISmsContact"
          },
          "message": {
            "maxLength": 500,
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "FAILED",
              "SUCCESS"
            ],
            "readOnly": true,
            "default": "FAILED",
            "example": "FAILED",
            "type": "string"
          },
          "templateName": {
            "enum": [
              "NEW_ORDER",
              "ORDER_SHIPPED",
              "ORDER_READY_FOR_PICKED_UP"
            ],
            "type": "string"
          },
          "placeholders": {
            "writeOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/IPlaceholder"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        },
        "required": [
          "sender",
          "recipient",
          "message",
          "status",
          "templateName"
        ]
      },
      "ISmsContact": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "telephone": {
            "type": "string"
          }
        },
        "required": [
          "telephone"
        ]
      },
      "ISmsTemplate": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "message",
          "name"
        ],
        "properties": {
          "message": {},
          "name": {
            "enum": [
              "NEW_ORDER",
              "ORDER_SHIPPED",
              "ORDER_READY_FOR_PICKED_UP"
            ],
            "readOnly": true,
            "type": "string"
          },
          "placeholders": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/IPlaceholderDefinition"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "ISps": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "order"
        ],
        "properties": {
          "order": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "response": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ISuperfaktura": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "action"
        ],
        "properties": {
          "action": {
            "enum": [
              "CREATE_REGULAR",
              "CREATE_PROFORMA",
              "CREATE_CANCEL",
              "CREATE_ORDER",
              "CREATE_DELIVERY",
              "GET_REGULAR_PDF",
              "GET_PROFORMA_PDF",
              "GET_CANCEL_PDF",
              "GET_ORDER_PDF",
              "GET_DELIVERY_PDF"
            ],
            "type": "string"
          },
          "resource": {
            "type": [
              "string",
              "null"
            ]
          },
          "url": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "ITransaction": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "gateway",
          "order",
          "transactionId",
          "paymentAttempt",
          "price"
        ],
        "properties": {
          "gateway": {
            "type": "string",
            "enum": [
              "STRIPE",
              "GO_PAY",
              "GP_WEB_PAY",
              "24_PAY",
              "TATRA_PAY",
              "BESTERON",
              "TATRA_PAY_CARD_PAY",
              "TATRA_PAY_BANK_TRANSFER",
              "TATRA_PAY_PAY_LATER",
              "PAY_PAL",
              "TRUSTPAY"
            ]
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "response": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "transactionId": {
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "PENDING",
              "AUTHORIZED",
              "PARTIALLY_PAID",
              "PAID",
              "PARTIALLY_REFUNDED",
              "REFUNDED",
              "VOIDED",
              "FAILED"
            ],
            "readOnly": true,
            "default": "PENDING",
            "example": "PENDING",
            "type": [
              "string",
              "null"
            ]
          },
          "paymentAttempt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "sign": {
            "readOnly": true,
            "type": "string"
          },
          "paymentAttributes": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "clientIpAddress": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "redirectUrl": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "currency": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "IUser": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IAddress"
            }
          },
          "shippingAddress": {
            "deprecated": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "billingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IAddress"
              },
              {
                "type": "null"
              }
            ]
          },
          "nationality": {
            "type": [
              "string",
              "null"
            ]
          },
          "birthdate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "managedEstablishments": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "establishments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "gender": {
            "enum": [
              "M",
              "F"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "productPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "productVariantPrices": {
            "type": "object",
            "example": {
              "8": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "446": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "salesReferent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "children": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "plainPassword": {
            "minLength": 8,
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "oldPassword": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "newPassword": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "role": {
            "enum": [
              "ROLE_SUPER_ADMIN",
              "ROLE_ADMIN",
              "ROLE_EMPLOYEE",
              "ROLE_CLIENT",
              "ROLE_USER"
            ],
            "default": "ROLE_CLIENT",
            "example": "ROLE_CLIENT",
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "lastLogin": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "hash": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pin": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "permissionRole": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {},
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "userGroup": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "loyaltyPoints": {
            "type": [
              "integer",
              "null"
            ]
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "description": {},
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "role",
          "enabled",
          "email",
          "familyName",
          "givenName"
        ]
      },
      "IUser-CHANGE_PASSWORD_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "oldPassword",
          "newPassword",
          "email"
        ],
        "properties": {
          "oldPassword": {
            "minLength": 8,
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "newPassword": {
            "minLength": 8,
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "IUser-CHECK_EMAIL_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "IUser-FORGOT_PASSWORD_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "IUser-REGISTRATION_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "plainPassword",
          "email"
        ],
        "properties": {
          "plainPassword": {
            "minLength": 8,
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          },
          "shop": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IShop-REGISTRATION_INPUT"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "IUser-UPDATE_ORDER": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email",
          "familyName",
          "givenName"
        ],
        "properties": {
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {},
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "description": {}
        }
      },
      "IUser-VERIFICATION_INPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "hash",
          "pin"
        ],
        "properties": {
          "hash": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pin": {
            "minLength": 6,
            "maxLength": 6,
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "IUserGroup": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "discounts": {
            "maxItems": 20,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "categories": {
            "maxItems": 20,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "priceDefinition": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "name": {},
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "IUserInformationParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "user",
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "user": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameterItem": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameter": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "IWebPage": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "onOff": {
            "type": "boolean"
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "excerpt": {},
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomField"
            }
          },
          "template": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "parentId": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "parentName": {
            "readOnly": true
          },
          "parentUrl": {
            "readOnly": true
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "IWebTranslation": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "translations",
          "language"
        ],
        "properties": {
          "type": {
            "maxLength": 64,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "language": {
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "type": "string"
          }
        }
      },
      "IWishlist": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product"
        ],
        "properties": {
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "productVariant": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "IZone": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "countries",
          "name"
        ],
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "CH",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ],
            "example": [
              "SK",
              "CZ"
            ]
          },
          "priceDefinition": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "file": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "Import": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "file"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "UPDATE_PRICES_FROM_CSV"
            ],
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "messages": {
            "readOnly": true,
            "default": {
              "info": [],
              "warning": []
            },
            "example": {
              "info": [],
              "warning": []
            },
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "InstagramFeed": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "medias": {
            "type": "string"
          }
        }
      },
      "JsonBlock": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name",
          "type",
          "jsonBlock"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "maxLength": 64,
            "type": "string"
          },
          "type": {
            "enum": [
              "CUSTOM",
              "INTERNAL"
            ],
            "type": "string"
          },
          "jsonBlock": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "Login-LOGIN_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "token"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "user": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "Mercure": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Navigation": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "menu": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "name": "string",
                "url": "string",
                "items": [
                  "string"
                ],
                "metaInformation": [
                  "string"
                ]
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "onOff": {
            "type": "boolean"
          },
          "url": {
            "maxLength": 255,
            "type": "string"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "Order": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "number": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderUser"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "contactPerson": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrderUser"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "enum": [
              "DRAFT",
              "SAVED",
              "NEW",
              "EXPORT_FAILED",
              "PROCESSING",
              "PAYMENT_PENDING",
              "PAYMENT_FAILED",
              "PAYMENT_REFUNDED",
              "PAID",
              "IN_PRODUCTION",
              "SHIPPED",
              "READY_FOR_PICKUP",
              "CANCELLED",
              "CLOSED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "cancelReason": {
            "enum": [
              "CUSTOMER",
              "FRAUD",
              "INVENTORY",
              "DECLINED",
              "OTHER"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "cancelDescription": {
            "type": [
              "string",
              "null"
            ]
          },
          "postNumber": {
            "type": [
              "string",
              "null"
            ]
          },
          "notes": {
            "type": [
              "string",
              "null"
            ]
          },
          "cancelledAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "consents": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "financialStatus": {
            "enum": [
              "PENDING",
              "AUTHORIZED",
              "PARTIALLY_PAID",
              "PAID",
              "PARTIALLY_REFUNDED",
              "REFUNDED",
              "VOIDED",
              "FAILED"
            ],
            "default": "PENDING",
            "example": "PENDING",
            "type": [
              "string",
              "null"
            ]
          },
          "paymentType": {
            "enum": [
              "COD",
              "CASH",
              "GO_PAY",
              "GP_WEB_PAY",
              "24_PAY",
              "TATRA_PAY",
              "BESTERON",
              "TATRA_PAY_CARD_PAY",
              "TATRA_PAY_BANK_TRANSFER",
              "TATRA_PAY_PAY_LATER",
              "STRIPE",
              "BANK_TRANSFER",
              "PAY_PAL",
              "TRUSTPAY"
            ],
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "closedAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "currency": {
            "enum": [
              "EUR",
              "USD",
              "CZK",
              "HUF",
              "PLN",
              "BGN",
              "DKK",
              "RON",
              "SEK"
            ],
            "readOnly": true,
            "default": "EUR",
            "example": "EUR",
            "type": "string"
          },
          "coupon": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "couponCode": {
            "type": [
              "string",
              "null"
            ]
          },
          "payBySquare": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "discount": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "shipping": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "carrier": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "serviceType": "string",
              "file": "string",
              "referenceId": "string",
              "referenceData": "string"
            }
          },
          "payment": {},
          "zone": {},
          "priceLevel": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "type": "string",
              "amountFrom": "string",
              "amountTo": "string"
            }
          },
          "pickUpPoint": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "carrierPrice": {
            "readOnly": true,
            "type": "string"
          },
          "paymentPrice": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFee": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFeeWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "carrierPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "paymentPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "shippingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "billingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "hash": {
            "readOnly": true,
            "type": "string"
          },
          "sessionId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "items": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "dryRun": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "validateAvailability": {
            "type": "boolean"
          },
          "salesReferent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "establishment": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "width": {
            "type": [
              "integer",
              "null"
            ]
          },
          "height": {
            "type": [
              "integer",
              "null"
            ]
          },
          "newAt": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "depth": {
            "type": [
              "integer",
              "null"
            ]
          },
          "invoice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "subTotalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "subTotalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalWeight": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalLoyaltyPointsPrice": {
            "readOnly": true,
            "type": "integer"
          },
          "totalLoyaltyPoints": {
            "readOnly": true,
            "type": "integer"
          },
          "shippingPrice": {
            "readOnly": true,
            "type": "string"
          },
          "shippingPriceWithTax": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "shop",
          "status",
          "hash"
        ]
      },
      "OrderItem": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "item",
          "product",
          "category",
          "quantity"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "item": {
            "pattern": "^(.*(^/(?:products|product_variants)/\\d+$).*)$",
            "type": "string",
            "format": "iri-reference",
            "example": [
              "https://example.com/"
            ]
          },
          "product": {
            "readOnly": true,
            "type": "object",
            "example": {
              "0": "loyaltyPoints",
              "1": "loyaltyPointsPrice",
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "variantsCount": "integer",
              "productSet": "boolean",
              "status": "string",
              "stockCount": "integer",
              "availability": "string",
              "unit": "string",
              "sku": "string",
              "weight": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "minVariantPrice": "string",
              "minVariantPriceWithTax": "string",
              "referenceId": "string",
              "referenceData": [
                "string"
              ],
              "relatedProducts": {
                "@id": "/products/2",
                "id": "integer",
                "name": "string",
                "image": "string",
                "url": "string",
                "urls": [
                  "string"
                ],
                "price": "string",
                "tax": "string",
                "priceWithTax": "string",
                "minVariantPrice": "string",
                "minVariantPriceWithTax": "string",
                "stockCount": "integer",
                "variantsCount": "integer",
                "availability": "string"
              }
            }
          },
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "productVariant": {
            "readOnly": true,
            "type": "object",
            "example": {
              "0": "loyaltyPoints",
              "1": "loyaltyPointsPrice",
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "status": "string",
              "stockCount": "integer",
              "availability": "string",
              "unit": "string",
              "sku": "string",
              "weight": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "referenceId": "string",
              "referenceData": [
                "string"
              ],
              "parameters": {
                "customParameter": {
                  "@id": "string",
                  "id": "integer",
                  "url": "string",
                  "urls": [
                    "string"
                  ],
                  "name": "string"
                },
                "customParameterItem": {
                  "value": "string",
                  "name": "string"
                }
              }
            }
          },
          "category": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ],
              "type": "string",
              "productCount": "string",
              "productMinPrice": "string"
            }
          },
          "producer": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "url": "string",
              "urls": [
                "string"
              ]
            }
          },
          "productConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemProductConfiguration"
            }
          },
          "quantity": {
            "minimum": 1,
            "type": "integer"
          },
          "coupon": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "usedLoyaltyPoints": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "price": {
            "type": "string"
          },
          "weight": {
            "readOnly": true,
            "type": "string"
          },
          "totalWeight": {
            "readOnly": true,
            "type": "string"
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "type": "string"
          },
          "totalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithConfigurationAndTax": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithConfiguration": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalLoyaltyPoints": {
            "readOnly": true,
            "type": "integer"
          },
          "totalLoyaltyPointsPrice": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "OrderItemProductConfiguration": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "productConfiguration",
          "itemConfiguration",
          "quantity"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "productConfiguration": {
            "readOnly": true,
            "type": "object",
            "example": {
              "@id": "string",
              "id": "integer",
              "name": "string",
              "image": "string",
              "price": "string",
              "tax": "string",
              "priceWithTax": "string",
              "quantityAble": "string"
            }
          },
          "itemConfiguration": {
            "pattern": "^(/(?:product_configurations)/\\d+)$",
            "type": "string",
            "format": "iri-reference",
            "example": [
              "https://example.com/"
            ]
          },
          "quantity": {
            "type": "integer"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "totalPrice": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "totalPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          },
          "totalTax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "OrderStatusChange": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "statusFrom",
          "statusTo",
          "order"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "statusFrom": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "type": "string"
          },
          "statusTo": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "type": "string"
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "OrderUser": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {}
        }
      },
      "Packeta": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "order"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "order": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "response": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Payment": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "paymentAttributes": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "type": {
            "enum": [
              "COD",
              "CASH",
              "GO_PAY",
              "GP_WEB_PAY",
              "24_PAY",
              "TATRA_PAY",
              "BESTERON",
              "TATRA_PAY_CARD_PAY",
              "TATRA_PAY_BANK_TRANSFER",
              "TATRA_PAY_PAY_LATER",
              "STRIPE",
              "BANK_TRANSFER",
              "PAY_PAL",
              "TRUSTPAY"
            ],
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "type",
          "name"
        ]
      },
      "Pdf": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "fromDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "toDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "name": {
            "maxLength": 64,
            "type": "string"
          },
          "resource": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ]
          },
          "html": {
            "type": [
              "string",
              "null"
            ]
          },
          "payBySquare": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "templateName": {
            "enum": [
              "CUSTOM_HTML",
              "GIFT_VOUCHER",
              "INVOICE"
            ],
            "writeOnly": true,
            "type": "string"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "url": {
            "readOnly": true,
            "type": "string"
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "templateName"
        ]
      },
      "PickUpPoint": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "carrier",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "carrier": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "Placeholder": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "PlaceholderDefinition": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {}
        }
      },
      "PriceDefinition": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "identifier",
          "currency"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "identifier": {
            "pattern": "^(.*[a-zA-Z0-9].*)$",
            "maxLength": 8,
            "type": "string"
          },
          "currency": {
            "enum": [
              "EUR",
              "USD",
              "CZK",
              "HUF",
              "PLN",
              "BGN",
              "DKK",
              "RON",
              "SEK"
            ],
            "type": "string"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      },
      "PriceLevel": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "carrierPrices",
          "paymentPrices",
          "carrier",
          "amountFrom",
          "amountTo",
          "type"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "carrierPrices": {
            "minItems": 1,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "paymentPrices": {
            "minItems": 1,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "carrier": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "payments": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "zones": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "amountFrom": {
            "type": "string"
          },
          "amountTo": {
            "type": "string"
          },
          "type": {
            "enum": [
              "WEIGHT",
              "PRICE"
            ],
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "carrierPrice": {
            "readOnly": true,
            "type": "string"
          },
          "carrierPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "paymentPrice": {
            "readOnly": true,
            "type": "string"
          },
          "paymentPriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "priceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "tax": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "Producer": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "visible": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "excerpt": {},
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "Producer-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "visible": {
            "default": true,
            "example": true,
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "excerpt": {},
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "Product": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "defaultVariant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductVariant"
              },
              {
                "type": "null"
              }
            ]
          },
          "variantParameterGroups": {
            "type": [
              "string",
              "null"
            ]
          },
          "relatedProducts": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "relatedArticles": {
            "maxItems": 10,
            "writeOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "informationParameters": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "minVariantPrices": {
            "minItems": 1,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "variantsCount": {
            "readOnly": true,
            "type": "integer"
          },
          "defaultCategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category"
              },
              {
                "type": "null"
              }
            ]
          },
          "producer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Producer"
              },
              {
                "type": "null"
              }
            ]
          },
          "categories": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "configurations": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "productSet": {
            "type": "boolean"
          },
          "quantityPrices": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "status": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "faq": {},
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "originalPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "minStockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "unit": {
            "enum": [
              "HOURS",
              "MINUTES",
              "GRAMS",
              "KILOGRAMS",
              "COUNT",
              "METERS",
              "CENTIMETERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "ean": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "launchDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "loyaltyPointsEarned": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "userPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "loyaltyPointsPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "minVariantPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "minVariantPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "loyaltyPoints": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "loyaltyPointsPrice": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        },
        "required": [
          "defaultCategory",
          "categories",
          "status",
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ]
      },
      "Product-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "defaultVariant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "variantParameterGroups": {
            "type": [
              "string",
              "null"
            ]
          },
          "relatedProducts": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product-GET_PRODUCT"
            }
          },
          "informationParameters": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductInformationParameter-GET_PRODUCT"
            }
          },
          "minVariantPrices": {
            "minItems": 1,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "variantsCount": {
            "readOnly": true,
            "type": "integer"
          },
          "defaultCategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "producer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Producer-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "categories": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category-GET_PRODUCT"
            }
          },
          "configurations": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConfiguration-GET_PRODUCT"
            }
          },
          "productSet": {
            "type": "boolean"
          },
          "quantityPrices": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductQuantityPrice-GET_PRODUCT"
            }
          },
          "status": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "faq": {},
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "originalPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "minStockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File-GET_PRODUCT"
            }
          },
          "unit": {
            "enum": [
              "HOURS",
              "MINUTES",
              "GRAMS",
              "KILOGRAMS",
              "COUNT",
              "METERS",
              "CENTIMETERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "ean": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "launchDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "loyaltyPointsEarned": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "userPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "loyaltyPointsPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField-GET_PRODUCT"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "minVariantPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "minVariantPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "loyaltyPoints": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "loyaltyPointsPrice": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        },
        "required": [
          "defaultCategory",
          "categories",
          "status",
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ]
      },
      "Product-GET_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "minVariantPrices": {
            "minItems": 1,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "variantsCount": {
            "readOnly": true,
            "type": "integer"
          },
          "defaultCategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Category-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "productSet": {
            "type": "boolean"
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File-GET_PRODUCT_IN_SET"
            }
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "minVariantPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "minVariantPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        },
        "required": [
          "defaultCategory",
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ]
      },
      "ProductConfiguration": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "quantityAble": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "taxLevel",
          "prices"
        ]
      },
      "ProductConfiguration-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "taxLevel",
          "prices"
        ]
      },
      "ProductConfiguration-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "position": {
            "type": [
              "integer",
              "null"
            ]
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_VARIANT"
              },
              {
                "type": "null"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "taxLevel",
          "prices"
        ]
      },
      "ProductInSet": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "quantity",
          "set"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "set": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "productVariant": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductInSet-GET_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "quantity",
          "set"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "set": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "product": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Product-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "productVariant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductInformationParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product",
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "product": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductInformationParameter-GET_PARAMETERS": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem-GET_PARAMETERS"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter-GET_PARAMETERS"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductInformationParameter-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductQuantityPrice": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product",
          "taxLevel",
          "fromQuantity",
          "toQuantity",
          "prices"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "readOnly": true,
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "fromQuantity": {
            "type": "integer"
          },
          "toQuantity": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "ProductQuantityPrice-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "taxLevel",
          "fromQuantity",
          "toQuantity",
          "prices"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "readOnly": true,
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "fromQuantity": {
            "type": "integer"
          },
          "toQuantity": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "ProductStockAuditTrail": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product",
          "stockCountBefore",
          "stockCountAfter",
          "operationType"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "stockCountBefore": {
            "type": "integer"
          },
          "stockCountAfter": {
            "type": "integer"
          },
          "operationType": {
            "enum": [
              "ORDER_CREATED",
              "ORDER_CANCELED",
              "MANUAL_CHANGE"
            ],
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "ProductVariant": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product",
          "status",
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "product": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "parameters": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantCustomParameter"
            }
          },
          "informationParameters": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "configurations": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConfiguration"
            }
          },
          "quantityPrices": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "status": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "faq": {},
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "originalPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "minStockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "unit": {
            "enum": [
              "HOURS",
              "MINUTES",
              "GRAMS",
              "KILOGRAMS",
              "COUNT",
              "METERS",
              "CENTIMETERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "ean": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "launchDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "loyaltyPointsEarned": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "userPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "loyaltyPointsPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "productId": {
            "readOnly": true,
            "type": "integer"
          },
          "productIri": {
            "readOnly": true,
            "type": "string"
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "loyaltyPoints": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "loyaltyPointsPrice": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        }
      },
      "ProductVariant-GET_PRODUCT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "status",
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "faq": {},
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "originalPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "minStockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File-GET_PRODUCT"
            }
          },
          "unit": {
            "enum": [
              "HOURS",
              "MINUTES",
              "GRAMS",
              "KILOGRAMS",
              "COUNT",
              "METERS",
              "CENTIMETERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "ean": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "launchDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "loyaltyPointsEarned": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "userPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "loyaltyPointsPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField-GET_PRODUCT"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT"
              },
              {
                "type": "null"
              }
            ]
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "loyaltyPoints": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "loyaltyPointsPrice": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        }
      },
      "ProductVariant-GET_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "parameters": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PRODUCT_IN_SET"
            }
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File-GET_PRODUCT_IN_SET"
            }
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        },
        "required": [
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ]
      },
      "ProductVariant-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "parameters": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantCustomParameter-GET_PRODUCT_VARIANT"
            }
          },
          "informationParameters": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantInformationParameter-GET_PRODUCT_VARIANT"
            }
          },
          "configurations": {
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductConfiguration-GET_PRODUCT_VARIANT"
            }
          },
          "quantityPrices": {
            "maxItems": 10,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariantQuantityPrice-GET_PRODUCT_VARIANT"
            }
          },
          "status": {
            "enum": [
              "ACTIVE",
              "ARCHIVED",
              "DRAFT",
              "NOT_LISTED",
              "PLANNED"
            ],
            "default": "DRAFT",
            "example": "DRAFT",
            "type": "string"
          },
          "faq": {},
          "serialNumbers": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "originalPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "purchasePrice": {
            "type": [
              "string",
              "null"
            ]
          },
          "stockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "minStockCount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "availability": {
            "enum": [
              "AVAILABLE",
              "NOT_AVAILABLE",
              "ON_REQUEST",
              "CURRENTLY_UNAVAILABLE",
              "TEMPORARILY_SOLD_OUT",
              "EXPECTED_RESTOCK_2_5_DAYS",
              "EXPECTED_RESTOCK_5_10_DAYS",
              "ON_ORDER_4_6_WEEKS",
              "ON_ORDER_8_12_WEEKS",
              "AT_SUPPLIER"
            ],
            "default": "AVAILABLE",
            "example": "AVAILABLE",
            "type": "string"
          },
          "files": {
            "maxItems": 50,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/File-GET_PRODUCT_VARIANT"
            }
          },
          "unit": {
            "enum": [
              "HOURS",
              "MINUTES",
              "GRAMS",
              "KILOGRAMS",
              "COUNT",
              "METERS",
              "CENTIMETERS"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "ean": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "weight": {
            "type": [
              "string",
              "null"
            ]
          },
          "unitPriceCoefficient": {
            "type": [
              "string",
              "null"
            ]
          },
          "launchDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "endDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "loyaltyPointsEarned": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "userPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "loyaltyPointsPrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "images": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "documents": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField-GET_PRODUCT_VARIANT"
            }
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "filesOrder": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            },
            "example": [
              "https://example.com/"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File-GET_PRODUCT_VARIANT"
              },
              {
                "type": "null"
              }
            ]
          },
          "excerpt": {},
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "onOff": {
            "type": "boolean"
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "productId": {
            "readOnly": true,
            "type": "integer"
          },
          "productIri": {
            "readOnly": true,
            "type": "string"
          },
          "originalPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "purchasePriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "readOnly": true,
            "type": "string"
          },
          "unitPriceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "originalPrice": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "loyaltyPoints": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "loyaltyPointsPrice": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          }
        },
        "required": [
          "status",
          "availability",
          "name",
          "url",
          "taxLevel",
          "prices"
        ]
      },
      "ProductVariant.ProductVariantOutput-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVariant-GET_PRODUCT_VARIANT"
            }
          }
        }
      },
      "ProductVariantCustomParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductVariantCustomParameter-GET_PARAMETERS": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem-GET_PARAMETERS"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter-GET_PARAMETERS"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductVariantCustomParameter-GET_PRODUCT_IN_SET": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter-GET_PRODUCT_IN_SET"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductVariantCustomParameter-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem-GET_PRODUCT_VARIANT"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter-GET_PRODUCT_VARIANT"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductVariantInformationParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "productVariant",
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "productVariant": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductVariantInformationParameter-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem-GET_PRODUCT_VARIANT"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter-GET_PRODUCT_VARIANT"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "ProductVariantQuantityPrice": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "productVariant",
          "taxLevel",
          "fromQuantity",
          "toQuantity",
          "prices"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "productVariant": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "readOnly": true,
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "fromQuantity": {
            "type": "integer"
          },
          "toQuantity": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "ProductVariantQuantityPrice-GET_PRODUCT_VARIANT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "taxLevel",
          "fromQuantity",
          "toQuantity",
          "prices"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "taxLevel": {
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ],
            "readOnly": true,
            "default": "ZERO",
            "example": "ZERO",
            "type": "string"
          },
          "fromQuantity": {
            "type": "integer"
          },
          "toQuantity": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "prices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "priceWithTax": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pricesWithTax": {
            "readOnly": true,
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "tax": {
            "readOnly": true,
            "type": "string",
            "enum": [
              "ZERO",
              "LOW",
              "MIDDLE",
              "HIGH"
            ]
          },
          "price": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "ProductVariantStockAuditTrail": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "stockCountBefore",
          "stockCountAfter",
          "operationType"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "stockCountBefore": {
            "type": "integer"
          },
          "stockCountAfter": {
            "type": "integer"
          },
          "operationType": {
            "enum": [
              "ORDER_CREATED",
              "ORDER_CANCELED",
              "MANUAL_CHANGE"
            ],
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "product": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "QRCode": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "data"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "data": {
            "maxLength": 255,
            "type": "string"
          },
          "size": {
            "default": 300,
            "example": 300,
            "type": "integer"
          },
          "margin": {
            "default": 10,
            "example": 10,
            "type": "integer"
          },
          "label": {
            "type": [
              "string",
              "null"
            ]
          },
          "labelSize": {
            "default": 15,
            "example": 15,
            "type": "integer"
          }
        }
      },
      "Redirect": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "fromUrl",
          "toUrl"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "fromUrl": {
            "type": "string"
          },
          "toUrl": {
            "type": "string"
          }
        }
      },
      "Redis-REDIS": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "value"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Review": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "stars",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "stars": {
            "enum": [
              "ONE_STAR",
              "TWO_STARS",
              "THREE_STARS",
              "FOUR_STARS",
              "FIVE_STARS"
            ],
            "type": "string"
          },
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "jobTitle": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "onOff": {
            "type": "boolean"
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "excerpt": {},
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Role": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "permissions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "additionalPermissions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "users": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {}
        },
        "required": [
          "name"
        ]
      },
      "Shop": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "tagline": {},
          "stamp": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "url": {
            "maxLength": 255,
            "type": "string"
          },
          "redirects": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Redirect"
            }
          },
          "handleStock": {
            "type": "boolean"
          },
          "stockAuditTrail": {
            "type": "boolean"
          },
          "generatePayBySquare": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          },
          "defaultTax": {
            "default": "0.2300",
            "example": "0.2300",
            "type": "string"
          },
          "zeroTax": {
            "default": "0.0000",
            "example": "0.0000",
            "type": "string"
          },
          "round": {
            "minimum": 0,
            "maximum": 4,
            "type": [
              "integer",
              "null"
            ]
          },
          "lowTax": {
            "default": "0.0500",
            "example": "0.0500",
            "type": "string"
          },
          "middleTax": {
            "default": "0.1900",
            "example": "0.1900",
            "type": "string"
          },
          "highTax": {
            "default": "0.2300",
            "example": "0.2300",
            "type": "string"
          },
          "priceDefinition": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "zone": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "handlingFeePrices": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "handlingFeeLimits": {
            "type": "object",
            "example": {
              "EUR": "string",
              "BGN": "string",
              "CZK": "string",
              "HUF": "string",
              "DKK": "string",
              "USD": "string",
              "PLN": "string",
              "RON": "string",
              "SEK": "string"
            }
          },
          "heurekaShopCertificationEnabled": {
            "type": "boolean"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "keywords": {},
          "metaDescription": {},
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "defaultAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          },
          "bankName": {
            "maxLength": 255,
            "type": [
              "string",
              "null"
            ]
          },
          "iban": {
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "bic": {
            "externalDocs": {
              "url": "https://schema.org/identifier"
            },
            "type": [
              "string",
              "null"
            ]
          },
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "language": {
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "type": "string"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "handlingFeePrice": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFeePriceWithTax": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFeeLimit": {
            "readOnly": true,
            "type": "string"
          },
          "handlingFeeLimitWithTax": {
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "url",
          "defaultTax",
          "zeroTax",
          "lowTax",
          "middleTax",
          "highTax",
          "priceDefinition",
          "name",
          "email",
          "language"
        ]
      },
      "Sms": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "messageId": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "sender": {
            "$ref": "#/components/schemas/SmsContact"
          },
          "recipient": {
            "$ref": "#/components/schemas/SmsContact"
          },
          "message": {
            "maxLength": 500,
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "FAILED",
              "SUCCESS"
            ],
            "readOnly": true,
            "default": "FAILED",
            "example": "FAILED",
            "type": "string"
          },
          "templateName": {
            "enum": [
              "NEW_ORDER",
              "ORDER_SHIPPED",
              "ORDER_READY_FOR_PICKED_UP"
            ],
            "type": "string"
          },
          "placeholders": {
            "writeOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/Placeholder"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        },
        "required": [
          "sender",
          "recipient",
          "message",
          "status",
          "templateName"
        ]
      },
      "SmsContact": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "telephone": {
            "type": "string"
          }
        },
        "required": [
          "telephone"
        ]
      },
      "SmsTemplate": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "message",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "message": {},
          "name": {
            "enum": [
              "NEW_ORDER",
              "ORDER_SHIPPED",
              "ORDER_READY_FOR_PICKED_UP"
            ],
            "readOnly": true,
            "type": "string"
          },
          "placeholders": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/PlaceholderDefinition"
            }
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "onOff": {
            "type": "boolean"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        }
      },
      "Sps": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "order"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "order": {
            "type": "string",
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "response": {
            "readOnly": true,
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Superfaktura": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "action"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "action": {
            "enum": [
              "CREATE_REGULAR",
              "CREATE_PROFORMA",
              "CREATE_CANCEL",
              "CREATE_ORDER",
              "CREATE_DELIVERY",
              "GET_REGULAR_PDF",
              "GET_PROFORMA_PDF",
              "GET_CANCEL_PDF",
              "GET_ORDER_PDF",
              "GET_DELIVERY_PDF"
            ],
            "type": "string"
          },
          "resource": {
            "type": [
              "string",
              "null"
            ]
          },
          "url": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "notCachedUrl": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Tag": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "resource"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "enum": [
              "ARTICLE",
              "CATEGORY",
              "CUSTOM_RESOURCE",
              "FILE",
              "PRODUCER",
              "PRODUCT",
              "PRODUCT_CONFIGURATION",
              "PRODUCT_VARIANT",
              "SHOP",
              "WEB_PAGE"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Transaction": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "gateway",
          "order",
          "transactionId",
          "paymentAttempt",
          "price"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "gateway": {
            "type": "string",
            "enum": [
              "STRIPE",
              "GO_PAY",
              "GP_WEB_PAY",
              "24_PAY",
              "TATRA_PAY",
              "BESTERON",
              "TATRA_PAY_CARD_PAY",
              "TATRA_PAY_BANK_TRANSFER",
              "TATRA_PAY_PAY_LATER",
              "PAY_PAL",
              "TRUSTPAY"
            ]
          },
          "order": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "response": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "transactionId": {
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "PENDING",
              "AUTHORIZED",
              "PARTIALLY_PAID",
              "PAID",
              "PARTIALLY_REFUNDED",
              "REFUNDED",
              "VOIDED",
              "FAILED"
            ],
            "readOnly": true,
            "default": "PENDING",
            "example": "PENDING",
            "type": [
              "string",
              "null"
            ]
          },
          "paymentAttempt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "readOnly": true,
            "type": "string"
          },
          "sign": {
            "readOnly": true,
            "type": "string"
          },
          "paymentAttributes": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "clientIpAddress": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "redirectUrl": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "currency": {
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "shippingAddress": {
            "deprecated": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "billingAddress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Address"
              },
              {
                "type": "null"
              }
            ]
          },
          "nationality": {
            "type": [
              "string",
              "null"
            ]
          },
          "birthdate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "managedEstablishments": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "establishments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "gender": {
            "enum": [
              "M",
              "F"
            ],
            "type": [
              "string",
              "null"
            ]
          },
          "productPrices": {
            "type": "object",
            "example": {
              "16": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "564": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "productVariantPrices": {
            "type": "object",
            "example": {
              "8": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              },
              "446": {
                "EUR": "string",
                "BGN": "string",
                "CZK": "string",
                "HUF": "string",
                "DKK": "string",
                "USD": "string",
                "PLN": "string",
                "RON": "string",
                "SEK": "string"
              }
            }
          },
          "salesReferent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "children": {},
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "plainPassword": {
            "minLength": 8,
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "oldPassword": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "newPassword": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "role": {
            "enum": [
              "ROLE_SUPER_ADMIN",
              "ROLE_ADMIN",
              "ROLE_EMPLOYEE",
              "ROLE_CLIENT",
              "ROLE_USER"
            ],
            "default": "ROLE_CLIENT",
            "example": "ROLE_CLIENT",
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "lastLogin": {
            "readOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "hash": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "pin": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ]
          },
          "permissionRole": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "givenName": {
            "type": [
              "string",
              "null"
            ]
          },
          "additionalName": {
            "type": [
              "string",
              "null"
            ]
          },
          "jobTitle": {},
          "companyName": {
            "type": [
              "string",
              "null"
            ]
          },
          "ico": {
            "type": [
              "string",
              "null"
            ]
          },
          "dic": {
            "type": [
              "string",
              "null"
            ]
          },
          "icdph": {
            "type": [
              "string",
              "null"
            ]
          },
          "registeredAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "dphPayer": {
            "type": "boolean"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "shop": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "userGroup": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "loyaltyPoints": {
            "type": [
              "integer",
              "null"
            ]
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "description": {},
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          }
        },
        "required": [
          "role",
          "enabled",
          "email",
          "familyName",
          "givenName"
        ]
      },
      "User-CHANGE_PASSWORD_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "User-CHECK_EMAIL_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email",
          "familyName"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          },
          "familyName": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "User-FORGOT_PASSWORD_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "User-REGISTRATION_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "email"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "User-VERIFICATION_OUTPUT": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "enabled",
          "email"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "email": {
            "format": "email",
            "externalDocs": {
              "url": "https://schema.org/email"
            },
            "type": "string"
          }
        }
      },
      "UserGroup": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "discounts": {
            "maxItems": 20,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "categories": {
            "maxItems": 20,
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference",
              "example": "https://example.com/"
            }
          },
          "priceDefinition": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "name": {},
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "referenceId": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "referenceData": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "UserInformationParameter": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "user",
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "writeOnly": true,
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "UserInformationParameter-GET_PARAMETERS": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "customParameterItem",
          "customParameter"
        ],
        "properties": {
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "customParameterItem": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameterItem-GET_PARAMETERS"
              },
              {
                "type": "null"
              }
            ]
          },
          "customParameter": {
            "readOnly": true,
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomParameter-GET_PARAMETERS"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          }
        }
      },
      "WebPage": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "parent": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "description": {},
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "createdAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "onOff": {
            "type": "boolean"
          },
          "keywords": {},
          "metaDescription": {},
          "url": {},
          "excerpt": {},
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          },
          "template": {
            "maxLength": 64,
            "type": [
              "string",
              "null"
            ]
          },
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "shops": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "parentId": {
            "readOnly": true,
            "type": [
              "integer",
              "null"
            ]
          },
          "parentName": {
            "readOnly": true
          },
          "parentUrl": {
            "readOnly": true
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "WebTranslation": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "type",
          "translations",
          "language"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "maxLength": 64,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "language": {
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "type": "string"
          }
        }
      },
      "Wishlist": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "product"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "product": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "productVariant": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "user": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          }
        }
      },
      "Zone": {
        "type": "object",
        "description": "",
        "deprecated": false,
        "required": [
          "countries",
          "name"
        ],
        "properties": {
          "@context": {
            "readOnly": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "properties": {
                  "@vocab": {
                    "type": "string"
                  },
                  "hydra": {
                    "type": "string",
                    "enum": [
                      "http://www.w3.org/ns/hydra/core#"
                    ]
                  }
                },
                "required": [
                  "@vocab",
                  "hydra"
                ],
                "additionalProperties": true
              }
            ]
          },
          "@id": {
            "readOnly": true,
            "type": "string"
          },
          "@type": {
            "readOnly": true,
            "type": "string"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "AD",
              "AE",
              "AF",
              "AG",
              "AI",
              "AL",
              "AM",
              "AO",
              "AQ",
              "AR",
              "AS",
              "AT",
              "AU",
              "AW",
              "AX",
              "AZ",
              "BA",
              "BB",
              "BD",
              "BE",
              "BF",
              "BG",
              "BH",
              "BI",
              "BJ",
              "BL",
              "BM",
              "BN",
              "BO",
              "BQ",
              "BR",
              "BS",
              "BT",
              "BV",
              "BW",
              "BY",
              "BZ",
              "CA",
              "CC",
              "CD",
              "CF",
              "CG",
              "CI",
              "CK",
              "CL",
              "CM",
              "CN",
              "CO",
              "CR",
              "CU",
              "CV",
              "CW",
              "CX",
              "CY",
              "CZ",
              "DE",
              "DJ",
              "DK",
              "DM",
              "DO",
              "DZ",
              "EC",
              "EE",
              "EG",
              "EH",
              "ER",
              "ES",
              "ET",
              "FI",
              "FJ",
              "FK",
              "FM",
              "FO",
              "FR",
              "GA",
              "GB",
              "GD",
              "GE",
              "GF",
              "GG",
              "GH",
              "GI",
              "GL",
              "GM",
              "GN",
              "GP",
              "GQ",
              "GR",
              "GS",
              "GT",
              "GU",
              "GW",
              "GY",
              "HK",
              "HM",
              "HN",
              "HR",
              "HT",
              "HU",
              "CH",
              "ID",
              "IE",
              "IL",
              "IM",
              "IN",
              "IO",
              "IQ",
              "IR",
              "IS",
              "IT",
              "JE",
              "JM",
              "JO",
              "JP",
              "KE",
              "KG",
              "KH",
              "KI",
              "KM",
              "KN",
              "KP",
              "KR",
              "KW",
              "KY",
              "KZ",
              "LA",
              "LB",
              "LC",
              "LI",
              "LK",
              "LR",
              "LS",
              "LT",
              "LU",
              "LV",
              "LY",
              "MA",
              "MC",
              "MD",
              "ME",
              "MF",
              "MG",
              "MH",
              "MK",
              "ML",
              "MM",
              "MN",
              "MO",
              "MP",
              "MQ",
              "MR",
              "MS",
              "MT",
              "MU",
              "MV",
              "MW",
              "MX",
              "MY",
              "MZ",
              "NA",
              "NC",
              "NE",
              "NF",
              "NG",
              "NI",
              "NL",
              "NO",
              "NP",
              "NR",
              "NU",
              "NZ",
              "OM",
              "PA",
              "PE",
              "PF",
              "PG",
              "PH",
              "PK",
              "PL",
              "PM",
              "PN",
              "PR",
              "PS",
              "PT",
              "PW",
              "PY",
              "QA",
              "RE",
              "RO",
              "RS",
              "RU",
              "RW",
              "SA",
              "SB",
              "SC",
              "SD",
              "SE",
              "SG",
              "SH",
              "SI",
              "SJ",
              "SK",
              "SL",
              "SM",
              "SN",
              "SO",
              "SR",
              "SS",
              "ST",
              "SV",
              "SX",
              "SY",
              "SZ",
              "TC",
              "TD",
              "TF",
              "TG",
              "TH",
              "TJ",
              "TK",
              "TL",
              "TM",
              "TN",
              "TO",
              "TR",
              "TT",
              "TV",
              "TW",
              "TZ",
              "UA",
              "UG",
              "UM",
              "US",
              "UY",
              "UZ",
              "VA",
              "VC",
              "VE",
              "VG",
              "VI",
              "VN",
              "VU",
              "WF",
              "WS",
              "YE",
              "YT",
              "ZA",
              "ZM",
              "ZW"
            ],
            "example": [
              "SK",
              "CZ"
            ]
          },
          "priceDefinition": {
            "type": [
              "string",
              "null"
            ],
            "format": "iri-reference",
            "example": "https://example.com/"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {},
          "translated": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": [
              "sk",
              "en",
              "de",
              "cs",
              "hu",
              "pl"
            ],
            "example": [
              "sk",
              "cs",
              "en"
            ]
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/File"
              },
              {
                "type": "null"
              }
            ]
          },
          "metaInformation": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "key": "value"
              }
            ]
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "description": "Value for the Authorization header parameter.",
        "name": "Authorization",
        "in": "header"
      },
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ],
  "tags": [
    {
      "name": "Article"
    },
    {
      "name": "Banner"
    },
    {
      "name": "BannerSlide"
    },
    {
      "name": "BarcodeScanner"
    },
    {
      "name": "Category"
    },
    {
      "name": "Coupon"
    },
    {
      "name": "CustomField"
    },
    {
      "name": "CustomParameter"
    },
    {
      "name": "CustomParameterItem"
    },
    {
      "name": "ProductInformationParameter"
    },
    {
      "name": "ProductVariantCustomParameter"
    },
    {
      "name": "ProductVariantInformationParameter"
    },
    {
      "name": "UserInformationParameter"
    },
    {
      "name": "CustomResource"
    },
    {
      "name": "Discount"
    },
    {
      "name": "Dpd"
    },
    {
      "name": "Email"
    },
    {
      "name": "EmailTemplate"
    },
    {
      "name": "Enquiry"
    },
    {
      "name": "EnquiryStatusChange"
    },
    {
      "name": "Enum"
    },
    {
      "name": "EnvironmentVariable"
    },
    {
      "name": "Establishment"
    },
    {
      "name": "Export"
    },
    {
      "name": "File"
    },
    {
      "name": "Google",
      "description": "Google Product Category for GMC feed."
    },
    {
      "name": "Heureka",
      "description": "Heureka Product Category for GMC feed."
    },
    {
      "name": "Import"
    },
    {
      "name": "InstagramFeed"
    },
    {
      "name": "JsonBlock"
    },
    {
      "name": "Login"
    },
    {
      "name": "Logstash"
    },
    {
      "name": "Mercure"
    },
    {
      "name": "Navigation"
    },
    {
      "name": "Order"
    },
    {
      "name": "OrderItem"
    },
    {
      "name": "OrderStatusChange"
    },
    {
      "name": "Packeta"
    },
    {
      "name": "Payment"
    },
    {
      "name": "Transaction"
    },
    {
      "name": "Pdf"
    },
    {
      "name": "PriceDefinition"
    },
    {
      "name": "Producer"
    },
    {
      "name": "Product"
    },
    {
      "name": "ProductConfiguration"
    },
    {
      "name": "ProductInSet"
    },
    {
      "name": "ProductQuantityPrice"
    },
    {
      "name": "ProductStockAuditTrail"
    },
    {
      "name": "ProductVariant"
    },
    {
      "name": "ProductVariantQuantityPrice"
    },
    {
      "name": "ProductVariantStockAuditTrail"
    },
    {
      "name": "QRCode"
    },
    {
      "name": "Redis"
    },
    {
      "name": "ApiRequest"
    },
    {
      "name": "Review"
    },
    {
      "name": "Carrier"
    },
    {
      "name": "PickUpPoint"
    },
    {
      "name": "PriceLevel"
    },
    {
      "name": "Zone"
    },
    {
      "name": "Shop"
    },
    {
      "name": "Sms"
    },
    {
      "name": "SmsTemplate"
    },
    {
      "name": "Sps"
    },
    {
      "name": "Superfaktura"
    },
    {
      "name": "Tag"
    },
    {
      "name": "WebTranslation"
    },
    {
      "name": "Role"
    },
    {
      "name": "User"
    },
    {
      "name": "UserGroup"
    },
    {
      "name": "WebPage"
    },
    {
      "name": "Wishlist"
    }
  ],
  "webhooks": {}
}